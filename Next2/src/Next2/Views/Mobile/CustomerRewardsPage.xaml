<?xml version="1.0" encoding="utf-8" ?>
<views:BaseContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:prism="http://prismlibrary.com"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
    xmlns:ffimageloading="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
    xmlns:controls="clr-namespace:Next2.Controls"
    xmlns:buttons="clr-namespace:Next2.Controls.Buttons"
    xmlns:sc="clr-namespace:Next2.Controls.StateContainer"
    xmlns:enums="clr-namespace:Next2.Enums"
    xmlns:models="clr-namespace:Next2.Models"
    xmlns:viewModels="clr-namespace:Next2.ViewModels"
    xmlns:views="clr-namespace:Next2.Views"
    xmlns:pc="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
    xmlns:effects="clr-namespace:Next2.Effects"
    xmlns:mobiletemplates="clr-namespace:Next2.Controls.Templates.Mobile"
    x:DataType="viewModels:CustomerRewardsViewModel"
    x:Class="Next2.Views.Mobile.CustomerRewardsPage">
  
    <StackLayout BackgroundColor="{DynamicResource TextAndBackgroundColor_i5}">

        <StackLayout.Resources>
            <Style TargetType="Label">
                <Setter Property="TextColor" Value="{DynamicResource TextAndBackgroundColor_i1}"/>
            </Style>
            
            <Style x:Key="BorderButtonStyle_i2_1" TargetType="buttons:BorderButton" BasedOn="{StaticResource BorderButtonStyle_i2}">
                <Setter Property="HorizontalOptions" Value="FillAndExpand"/>
                <Setter Property="HeightRequest" Value="26"/>
                <Setter Property="Padding" Value="10, 4, 10, 8"/>
                <Setter Property="FontSize" Value="{DynamicResource TSize_i6}"/>
            </Style>
            
            <Style x:Key="LineSpacingLabelStyle_i1_1" TargetType="controls:LineSpacingLabel" BasedOn="{StaticResource LineSpacingLabelStyle_i1}">
                <Setter Property="WidthRequest" Value="230"/>
                <Setter Property="FontSize" Value="{DynamicResource TSize_i5}"/>
            </Style>
         </StackLayout.Resources>

        <!-- CANCEL BUTTON -->
        <StackLayout
            Padding="20, 0"
            Orientation="Horizontal"
            BackgroundColor="{DynamicResource TextAndBackgroundColor_i3}">

            <StackLayout
                HeightRequest="66"
                Spacing="18"
                Orientation="Horizontal"
                xct:TouchEffect.Command="{prism:GoBack}">

                <ffimageloading:CachedImage
                    HeightRequest="22"
                    Source="ic_arrow_left_tail_40x40" />

                <Label
                    VerticalOptions="Center"
                    FontFamily="Barlow-Bold"
                    FontSize="{DynamicResource TSize_i6}"
                    Text="{xct:Translate Payment}" />

            </StackLayout>

        </StackLayout>

        <BoxView 
            HeightRequest="1"
            BackgroundColor="{DynamicResource TextAndBackgroundColor_i5}"/>
        
        <StackLayout Orientation="Horizontal">
            
            <controls:CustomButton
                HeightRequest="48"
                FontSize="{DynamicResource TSize_i8}"
                Text="{xct:Translate Rewards}"
                IsSelected="{Binding IsRewardSelectionCompleted, Converter={xct:InvertedBoolConverter}}"/>

            <controls:CustomButton
                FontSize="{DynamicResource TSize_i8}"
                Text="{xct:Translate Complete}"
                IsSelected="{Binding IsRewardSelectionCompleted}" />

        </StackLayout>

        <sc:StateContainer State="{Binding PageState}">
                    
            <sc:StateContainer.Conditions>
                        
                <sc:StateCondition State="{Static enums:ECustomerRewardsPageState.NoSelectedCustomer}">
                    <StackLayout Margin="0, 110, 0, 0">
                                
                        <ffimageloading:CachedImage
                            Style="{DynamicResource CachedImageStyle_i1}"
                            FadeAnimationEnabled="False"
                            HeightRequest="250"
                            Source="pic_become_a_member"/>

                        <controls:LineSpacingLabel
                            Style="{DynamicResource LineSpacingLabelStyle_i1_1}"
                            Text="{xct:Translate StillNotMember}"/>

                    </StackLayout>
                </sc:StateCondition>
                        
                <sc:StateCondition State="{Static enums:ECustomerRewardsPageState.RewardsNotExist}">
                    <StackLayout Margin="0, 80">
                                                                
                        <ffimageloading:CachedImage
                            Style="{DynamicResource CachedImageStyle_i1}"
                            FadeAnimationEnabled="False"
                            HeightRequest="230"
                            Source="pic_rewards"/>

                        <controls:LineSpacingLabel
                            Style="{DynamicResource LineSpacingLabelStyle_i1_1}"
                            Text="{xct:Translate MessageAboutCashingOutAwards}"/>

                    </StackLayout>
                </sc:StateCondition>
                        
                <sc:StateCondition State="{Static enums:ECustomerRewardsPageState.RewardsExist}">
                    <StackLayout 
                        Padding="20"
                        Spacing="13">

                        <Label
                            FontFamily="Barlow-Bold"
                            FontSize="{DynamicResource TSize_i6}"
                            Text="{xct:Translate RewardsOptions}" />

                        <CollectionView
                            HeightRequest="{Binding Rewards, Converter={StaticResource listHeightConverter}, ConverterParameter=90}"
                            ItemsSource="{Binding Rewards}">
                    
                            <CollectionView.Effects>
                                <effects:NoOverScrollEffect/>
                            </CollectionView.Effects>
                            
                            <CollectionView.ItemTemplate>
                                <DataTemplate x:DataType="models:RewardBindabledModel">

                                    <mobiletemplates:RewardItemTemplate/>

                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                    
                        </CollectionView>
                    </StackLayout>
                </sc:StateCondition>
                        
            </sc:StateContainer.Conditions>
                    
        </sc:StateContainer>
        
        <BoxView 
            VerticalOptions="EndAndExpand"
            HeightRequest="1.5"
            BackgroundColor="{DynamicResource TextAndBackgroundColor_i2}"/>
                
        <StackLayout
            Padding="16, 12, 16, 14"
            Orientation="Horizontal"
            Spacing="8"
            BackgroundColor="{DynamicResource TextAndBackgroundColor_i3}">

            <buttons:BorderButton
                IsVisible="{Binding PageState, Converter={xct:EqualConverter}, ConverterParameter={Static enums:ECustomerRewardsPageState.NoSelectedCustomer}}"
                Style="{DynamicResource BorderButtonStyle_i2_1}"
                CornerRadius="4"
                BackgroundColor="{DynamicResource IndicationColor_i7}"
                Text="{xct:Translate BecomeMember}"
                xct:TouchEffect.Command="{Binding AddNewCustomerCommand}" />

            <buttons:BorderButton
                Style="{DynamicResource BorderButtonStyle_i2_1}"
                CornerRadius="4"
                BackgroundColor="{DynamicResource AppColor_i1}"
                Text="{xct:Translate Complete}">
                        
                <buttons:BorderButton.Triggers>
                    <DataTrigger
                        TargetType="buttons:BorderButton"
                        Binding="{Binding PageState, Converter={xct:EqualConverter}, ConverterParameter={Static enums:ECustomerRewardsPageState.NoSelectedCustomer}}"
                        Value="False">
                                
                        <Setter Property="BackgroundColor" Value="{DynamicResource IndicationColor_i1}"/>
                        <Setter Property="TextColor" Value="{DynamicResource TextAndBackgroundColor_i3}"/>
                                
                    </DataTrigger>
                </buttons:BorderButton.Triggers>
                        
            </buttons:BorderButton>
            
        </StackLayout>

        <BoxView
            HeightRequest="1.5"
            BackgroundColor="{DynamicResource TextAndBackgroundColor_i5}" />

    </StackLayout>
    
</views:BaseContentPage>