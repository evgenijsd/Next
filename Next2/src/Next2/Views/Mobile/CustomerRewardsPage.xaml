<?xml version="1.0" encoding="utf-8" ?>
<views:BaseContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:prism="http://prismlibrary.com"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
    xmlns:ffimageloading="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
    xmlns:controls="clr-namespace:Next2.Controls"
    xmlns:buttons="clr-namespace:Next2.Controls.Buttons"
    xmlns:sc="clr-namespace:Next2.Controls.StateContainer"
    xmlns:enums="clr-namespace:Next2.Enums"
    xmlns:models="clr-namespace:Next2.Models"
    xmlns:viewModels="clr-namespace:Next2.ViewModels"
    xmlns:views="clr-namespace:Next2.Views"
    xmlns:pc="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
    xmlns:effects="clr-namespace:Next2.Effects"
    x:DataType="viewModels:CustomerRewardsViewModel"
    x:Class="Next2.Views.Mobile.CustomerRewardsPage">
  
    <StackLayout BackgroundColor="{DynamicResource TextAndBackgroundColor_i5}">

        <StackLayout.Resources>
            <Style TargetType="Label">
                <Setter Property="TextColor" Value="{DynamicResource TextAndBackgroundColor_i1}"/>
            </Style>
            
            <Style x:Key="BorderButtonStyle_i2_1" TargetType="buttons:BorderButton" BasedOn="{StaticResource BorderButtonStyle_i2}">
                <Setter Property="HorizontalOptions" Value="FillAndExpand"/>
                <Setter Property="HeightRequest" Value="26"/>
                <Setter Property="Padding" Value="10, 4, 10, 8"/>
                <Setter Property="FontSize" Value="{DynamicResource TSize_i6}"/>
            </Style>
            
            <Style x:Key="LineSpacingLabelStyle_i1_1" TargetType="controls:LineSpacingLabel" BasedOn="{StaticResource LineSpacingLabelStyle_i1}">
                <Setter Property="WidthRequest" Value="230"/>
                <Setter Property="FontSize" Value="{DynamicResource TSize_i5}"/>
            </Style>
            
         </StackLayout.Resources>
        
        <controls:CustomNavigationbar
            HeightImage="20"
            HeightRequest="66"
            BackgroundColor="{DynamicResource TextAndBackgroundColor_i3}"
            FontSize="{DynamicResource TSize_i6}"
            FontFamily="Barlow-Bold"
            Title="{xct:Translate Payment}"
            LeftButtonCommand="{prism:GoBack}" />

        <BoxView 
            HeightRequest="1"
            BackgroundColor="{DynamicResource TextAndBackgroundColor_i5}"/>
        
        <StackLayout Orientation="Horizontal">
            
            <controls:CustomButton
                HeightRequest="48"
                FontSize="{DynamicResource TSize_i8}"
                Text="{xct:Translate Rewards}" 
                IsSelected="True"/>

            <controls:CustomButton
                FontSize="{DynamicResource TSize_i8}"
                Text="{xct:Translate Complete}" />
            
        </StackLayout>

        <sc:StateContainer State="{Binding PageState}">
                    
            <sc:StateContainer.Conditions>
                        
                <sc:StateCondition State="{Static enums:ECustomerRewardsPageState.NoSelectedCustomer}">
                    <StackLayout Margin="0, 120, 0, 0">
                                
                        <ffimageloading:CachedImage
                            Style="{DynamicResource CachedImageStyle_i1}"
                            FadeAnimationEnabled="False"
                            HeightRequest="230"
                            Source="pic_become_a_member"/>

                        <controls:LineSpacingLabel
                            Style="{DynamicResource LineSpacingLabelStyle_i1_1}"
                            Text="{xct:Translate StillNotMember}"/>

                    </StackLayout>
                </sc:StateCondition>
                        
                <sc:StateCondition State="{Static enums:ECustomerRewardsPageState.RewardsNotExist}">
                    <StackLayout Margin="0, 60">
                                                                
                        <ffimageloading:CachedImage
                            Style="{DynamicResource CachedImageStyle_i1}"
                            FadeAnimationEnabled="False"
                            HeightRequest="230"
                            Source="pic_rewards"/>

                        <controls:LineSpacingLabel
                            Style="{DynamicResource LineSpacingLabelStyle_i1_1}"
                            Text="{xct:Translate MessageAboutCashingOutAwards}"/>

                    </StackLayout>
                </sc:StateCondition>
                        
                <sc:StateCondition State="{Static enums:ECustomerRewardsPageState.RewardsExist}">
                    <StackLayout 
                        Padding="20"
                        Spacing="13">

                        <Label
                            FontFamily="Barlow-Bold"
                            FontSize="{DynamicResource TSize_i6}"
                            Text="{xct:Translate RewardsOptions}" />

                        <CollectionView
                            HeightRequest="{Binding Rewards, Converter={StaticResource listHeightConverter}, ConverterParameter=90}"
                            ItemsSource="{Binding Rewards}">
                    
                            <CollectionView.Effects>
                                <effects:NoOverScrollEffect/>
                            </CollectionView.Effects>
                            
                            <CollectionView.ItemTemplate>
                                <DataTemplate x:DataType="models:RewardBindabledModel">
                            
                                    <Frame 
                                        Padding="0, 5"
                                        BackgroundColor="Transparent"
                                        xct:TouchEffect.Command="{Binding SelectCommand}"
                                        xct:TouchEffect.CommandParameter="{Binding .}"
                                        x:Name="rewardFrame">
                                
                                        <Frame.Triggers>
                                            <DataTrigger TargetType="Frame" Binding="{Binding IsSelected}" Value="True">
                                                <Setter TargetName="rewardBorder" Property="pc:PancakeView.Border" Value="{pc:BorderMarkup Thickness=2, Color={StaticResource AppColor_i1}}"/>
                                                <Setter TargetName="rewardCheckBox" Property="ffimageloading:CachedImage.Source" Value="ic_check_box_checked_primary_24x24"/>
                                            </DataTrigger>
                                        </Frame.Triggers>
                                        
                                        <pc:PancakeView
                                            CornerRadius="6"
                                            BackgroundColor="{DynamicResource TextAndBackgroundColor_i4}"
                                            Border="{pc:BorderMarkup Thickness=3, Color={StaticResource TextAndBackgroundColor_i3}}"
                                            x:Name="rewardBorder">
                                    
                                            <StackLayout
                                                Orientation="Horizontal"
                                                Padding="14, 12">

                                                <StackLayout Spacing="3">

                                                    <Label
                                                        FontFamily="Barlow-Medium"
                                                        FontSize="{DynamicResource TSize_i6}"
                                                        Text="{Binding SetTitle}"/>

                                                    <Label
                                                        FontFamily="Barlow-SemiBold"
                                                        FontSize="{DynamicResource TSize_i8}"
                                                        Text="{xct:Translate Free}"/>

                                                </StackLayout>

                                                <ffimageloading:CachedImage
                                                    HorizontalOptions="EndAndExpand"
                                                    VerticalOptions="Center"
                                                    HeightRequest="24"
                                                    Source="ic_arrow_right_32x32"
                                                    x:Name="rewardCheckBox" />

                                            </StackLayout>

                                        </pc:PancakeView>                
                                
                                    </Frame>
                            
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                    
                        </CollectionView>
                    </StackLayout>
                </sc:StateCondition>
                        
            </sc:StateContainer.Conditions>
                    
        </sc:StateContainer>
        
        <BoxView 
            VerticalOptions="EndAndExpand"
            HeightRequest="1.5"
            BackgroundColor="{DynamicResource TextAndBackgroundColor_i2}"/>
                
        <StackLayout
            Padding="16, 12, 16, 14"
            Orientation="Horizontal"
            Spacing="8"
            BackgroundColor="{DynamicResource TextAndBackgroundColor_i3}">

            <buttons:BorderButton
                IsVisible="{Binding PageState, Converter={xct:EqualConverter}, ConverterParameter={Static enums:ECustomerRewardsPageState.NoSelectedCustomer}}"
                Style="{DynamicResource BorderButtonStyle_i2_1}"
                CornerRadius="4"
                BackgroundColor="{DynamicResource IndicationColor_i7}"
                Text="{xct:Translate BecomeMember}"
                xct:TouchEffect.Command="{Binding AddNewCustomerCommand}" />

            <buttons:BorderButton
                Style="{DynamicResource BorderButtonStyle_i2_1}"
                CornerRadius="4"
                BackgroundColor="{DynamicResource AppColor_i1}"
                Text="{xct:Translate Complete}">
                        
                <buttons:BorderButton.Triggers>
                    <DataTrigger
                        TargetType="buttons:BorderButton"
                        Binding="{Binding PageState, Converter={xct:EqualConverter}, ConverterParameter={Static enums:ECustomerRewardsPageState.NoSelectedCustomer}}"
                        Value="False">
                                
                        <Setter Property="BackgroundColor" Value="{DynamicResource IndicationColor_i1}"/>
                        <Setter Property="TextColor" Value="{DynamicResource TextAndBackgroundColor_i3}"/>
                                
                    </DataTrigger>
                </buttons:BorderButton.Triggers>
                        
            </buttons:BorderButton>
            
        </StackLayout>

        <BoxView
            HeightRequest="1.5"
            BackgroundColor="{DynamicResource TextAndBackgroundColor_i5}" />

    </StackLayout>
    
</views:BaseContentPage>