<?xml version="1.0" encoding="UTF-8"?>
<views:BaseContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:prism="http://prismlibrary.com"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
    xmlns:ffimageloading="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
    xmlns:local="clr-namespace:Next2"
    xmlns:behaviors="clr-namespace:Next2.Behaviors"
    xmlns:controls="clr-namespace:Next2.Controls"
    xmlns:buttons="clr-namespace:Next2.Controls.Buttons"
    xmlns:templates="clr-namespace:Next2.Controls.Templates"
    xmlns:enums="clr-namespace:Next2.Enums"
    xmlns:models="clr-namespace:Next2.Models"
    xmlns:modelsBindable="clr-namespace:Next2.Models.Bindables"
    xmlns:strings="clr-namespace:Next2.Resources.Strings"
    xmlns:viewmodels="clr-namespace:Next2.ViewModels"
    xmlns:views="clr-namespace:Next2.Views"
    BackgroundColor="{DynamicResource TextAndBackgroundColor_i3}"
    x:Class="Next2.Views.Mobile.OrderRegistrationPage"
    x:DataType="viewmodels:OrderRegistrationViewModel">

    <Grid
        RowDefinitions="auto, auto, auto, auto, 65"
        BackgroundColor="{DynamicResource TextAndBackgroundColor_i3}">

        <Grid.Resources>

            <Style TargetType="Label">
                <Setter Property="VerticalOptions" Value="Center"/>
                <Setter Property="TextColor" Value="{DynamicResource TextAndBackgroundColor_i1}"/>
            </Style>

            <!-- Bold (700) 32px -->
            <Style x:Key="Bold32pxLabelStyle" TargetType="Label">
                <Setter Property="FontFamily" Value="Barlow-Bold" />
                <Setter Property="FontSize" Value="{DynamicResource TSize_i6}" />
            </Style>

            <!-- SemiBold (600) 24px -->
            <Style x:Key="SemiBold32pxLabelStyle" TargetType="Label">
                <Setter Property="FontFamily" Value="Barlow-SemiBold" />
                <Setter Property="FontSize" Value="{DynamicResource TSize_i6}" />
            </Style>

            <!-- SemiBold (600) 24px -->
            <Style x:Key="SemiBold24pxLabelStyle" TargetType="Label">
                <Setter Property="FontFamily" Value="Barlow-SemiBold" />
                <Setter Property="FontSize" Value="{DynamicResource TSize_i8}" />
            </Style>

            <!-- Medium (500) 24px -->
            <Style x:Key="Medium24pxLabelStyle" TargetType="Label">
                <Setter Property="FontFamily" Value="Barlow-Medium" />
                <Setter Property="FontSize" Value="{DynamicResource TSize_i8}" />
            </Style>

            <!-- Regular (400) 32px -->
            <Style x:Key="Regular32pxLabelStyle" TargetType="Label">
                <Setter Property="FontFamily" Value="Barlow-Regular" />
                <Setter Property="FontSize" Value="{DynamicResource TSize_i6}" />
            </Style>

            <Style x:Key="IconButtonStyle_i2" TargetType="buttons:IconButton">
                <Setter Property="Padding" Value="9"/>
                <Setter Property="CornerRadius" Value="4"/>
            </Style>

        </Grid.Resources>
                        
        <!-- HEADER, 1 ROW -->
        <StackLayout
            Grid.Row="0"
            Padding="17, 19, 17, 24"
            HorizontalOptions="Start"
            Orientation="Horizontal"
            Spacing="17">

            <ffimageloading:CachedImage
                Margin="0, 3, 0, 0"
                HeightRequest="24"
                WidthRequest="24"
                Source="ic_arrow_left_tail_24x24.png"
                xct:TouchEffect.Command="{prism:GoBack}" />

            <Label
                Style="{DynamicResource Bold32pxLabelStyle}"
                Margin="0, 2, 0, 0">

                <Label.FormattedText>
                    <FormattedString>
                        <Span Text="{xct:Translate Order}" />
                        <Span Text="{Binding CurrentOrder.Number, StringFormat='{} #{0}'}" />
                    </FormattedString>
                </Label.FormattedText>

            </Label>

        </StackLayout>

        <controls:DropDownList
            Grid.Row="0"
            Style="{DynamicResource DropDownListStyle_i1}"
            HorizontalOptions="End"
            VerticalOptions="Start"
            Margin="17"
            WidthRequest="96"
            ItemHeight="46.5"
            HeaderText="{Binding SelectedOrderType.Text}"
            SelectedItem="{Binding SelectedOrderType}"
            ItemsSource="{Binding OrderTypes}">

            <controls:DropDownList.Triggers>

                <DataTrigger
                    TargetType="controls:DropDownList"
                    Binding="{Binding OrderNotificationStatus, Converter={xct:EqualConverter}, ConverterParameter={x:Static enums:ENotificationType.None}}"
                    Value="False">

                    <Setter Property="IsEnabled" Value="False"/>
                    <Setter Property="Opacity" Value="{StaticResource OpacityWhenDisabled_i1}"/>

                </DataTrigger>

            </controls:DropDownList.Triggers>
            
            <controls:DropDownList.DataTemplate>
                <DataTemplate>
                    <StackLayout 
                        Style="{DynamicResource StackLayoutTemplateStyle_i1}"
                        xct:TouchEffect.Command="{Binding SelectItemCommand, Source={RelativeSource AncestorType={x:Type controls:DropDownList}}}">

                        <StackLayout
                            HeightRequest="30"
                            Padding="14, 8"
                            Orientation="Horizontal">

                            <Label
                                HorizontalOptions="FillAndExpand"
                                FontFamily="Barlow-Medium"
                                FontSize="{DynamicResource TSize_i7}"
                                Text="{Binding Text}"
                                x:DataType="models:OrderTypeBindableModel"/>

                        </StackLayout>

                        <BoxView Style="{DynamicResource SeparatorStyle_i3}" />

                    </StackLayout>
                </DataTemplate>
            </controls:DropDownList.DataTemplate>

        </controls:DropDownList>

        <!-- HEADER, 2 ROW -->
        <StackLayout
            Grid.Row="1"
            VerticalOptions="FillAndExpand"
            HorizontalOptions="End"
            Padding="17, 10, 17, 18"
            Orientation="Horizontal"
            Spacing="13">

            <Label 
                Style="{DynamicResource SemiBold32pxLabelStyle}" 
                HorizontalOptions="EndAndExpand" 
                Text="{xct:Translate Seats}">

                <Label.Triggers>
                    <DataTrigger TargetType="Label" Binding="{Binding CurrentOrder.Seats.Count}" Value="0">

                        <Setter Property="Opacity" Value="{StaticResource OpacityWhenDisabled_i1}" />

                    </DataTrigger>
                </Label.Triggers>

            </Label>

            <controls:CustomStepper
                IsEnabled="{Binding OrderNotificationStatus, Converter={xct:EqualConverter}, ConverterParameter={x:Static enums:ENotificationType.None}}"
                MaxValue="{Binding SelectedTable.SeatNumbers}"
                Value="{Binding NumberOfSeats}"
                IncrementCommand="{Binding AddNewSeatCommand}"
                DecrementCommand="{Binding DeleteLastSeatCommand}"/>

        </StackLayout>

        <controls:DropDownList
            Grid.Row="1"
            Style="{DynamicResource DropDownListStyle_i1}"
            HorizontalOptions="Start"
            VerticalOptions="Start"
            Margin="18, 9"
            WidthRequest="145"
            ItemHeight="46.5"
            SelectedItem="{Binding SelectedTable}"
            ItemsSource="{Binding Tables}">

            <controls:DropDownList.HeaderText>
                <FormattedString>
                    <Span Text="{xct:Translate Table}"/>
                    <Span Text=" "/>
                    <Span Text="{Binding SelectedTable.TableNumber}"/>
                </FormattedString>
            </controls:DropDownList.HeaderText>

            <controls:DropDownList.Triggers>

                <DataTrigger TargetType="controls:DropDownList" Binding="{Binding SelectedTable, Converter={xct:IsNullOrEmptyConverter}}" Value="True">

                    <Setter Property="HeaderText" Value="{xct:Translate NoTablesAvailable}"/>
                    <Setter Property="IsEnabled" Value="False"/>
                    <Setter Property="Opacity" Value="{DynamicResource OpacityWhenDisabled_i1}"/>

                </DataTrigger>

                <DataTrigger
                    TargetType="controls:DropDownList"
                    Binding="{Binding OrderNotificationStatus, Converter={xct:EqualConverter}, ConverterParameter={x:Static enums:ENotificationType.None}}"
                    Value="False">

                    <Setter Property="IsEnabled" Value="False"/>
                    <Setter Property="Opacity" Value="{DynamicResource OpacityWhenDisabled_i1}"/>

                </DataTrigger>

            </controls:DropDownList.Triggers>
            
            <controls:DropDownList.DataTemplate>
                <DataTemplate>
                    <StackLayout 
                        Style="{DynamicResource StackLayoutTemplateStyle_i1}"
                        xct:TouchEffect.Command="{Binding SelectItemCommand, Source={RelativeSource AncestorType={x:Type controls:DropDownList}}}">

                        <StackLayout
                            HeightRequest="30"
                            Padding="14, 8"
                            Orientation="Horizontal"
                            x:DataType="modelsBindable:TableBindableModel">

                            <Label
                                HorizontalOptions="FillAndExpand"
                                FontFamily="Barlow-Medium"
                                FontSize="{DynamicResource TSize_i7}">

                                <Label.FormattedText>
                                    <FormattedString>
                                        <Span Text="{xct:Translate Table}"/>
                                        <Span Text=" "/>
                                        <Span Text="{Binding TableNumber}"/>
                                    </FormattedString>
                                </Label.FormattedText>
                                
                            </Label>

                        </StackLayout>

                        <BoxView Style="{DynamicResource SeparatorStyle_i3}" />

                    </StackLayout>
                </DataTemplate>
            </controls:DropDownList.DataTemplate>

        </controls:DropDownList>

        <controls:CustomCollectionView
            Grid.Row="2"
            BackgroundColor="{DynamicResource TextAndBackgroundColor_i8}"
            SelectionMode="Single"
            IsGrouped="True"
            BounceMode="DisabledForAndroidAndiOS"
            ItemsSource="{Binding DishesGroupedBySeats}"
            SelectedItem="{Binding SelectedDish}">

            <controls:CustomCollectionView.Behaviors>
                <behaviors:ScrollToDishGroupCenterBehavior />
            </controls:CustomCollectionView.Behaviors>

            <controls:CustomCollectionView.EmptyView>
                <StackLayout BackgroundColor="{DynamicResource TextAndBackgroundColor_i4}">

                    <Frame
                        IsVisible="{Binding OrderNotificationStatus, Converter={xct:NotEqualConverter}, ConverterParameter={x:Static enums:ENotificationType.None}}"
                        BackgroundColor="{DynamicResource TextAndBackgroundColor_i3}"
                        BorderColor="{DynamicResource TextAndBackgroundColor_i2}"
                        HorizontalOptions="FillAndExpand"
                        Margin="15"
                        CornerRadius="10"
                        MinimumHeightRequest="64">

                        <Frame.Triggers>

                            <DataTrigger TargetType="Frame" Binding="{Binding OrderNotificationStatus}" Value="{x:Static enums:ENotificationType.OrderSaved}">

                                <Setter Property="MinimumHeightRequest" Value="88"/>

                            </DataTrigger>

                        </Frame.Triggers>

                        <StackLayout Margin="15">

                            <StackLayout Orientation="Horizontal">

                                <Label
                                    Text="{Binding CurrentOrder.Number, StringFormat={Static strings:Strings.TheOrderHasBeenRemoved}}"
                                    VerticalTextAlignment="Center"
                                    FontFamily="Barlow-Medium"
                                    FontSize="{DynamicResource TSize_i8}">

                                    <Label.Triggers>

                                        <DataTrigger TargetType="Label" Binding="{Binding OrderNotificationStatus}" Value="{x:Static enums:ENotificationType.OrderSaved}">
                                            
                                            <Setter Property="Text" Value="{Binding CurrentOrder.Number, StringFormat={Static strings:Strings.TheOrderWasPlacedTo}}"/>
                                            
                                        </DataTrigger>
                                        
                                    </Label.Triggers>

                                </Label>

                                <ffimageloading:CachedImage
                                    Source="ic_close_square_24x24"
                                    HeightRequest="24"
                                    WidthRequest="24"
                                    HorizontalOptions="EndAndExpand"
                                    xct:TouchEffect.Command="{Binding HideOrderNotificationCommnad}"/>
                                
                            </StackLayout>

                            <StackLayout
                                Orientation="Horizontal"
                                IsVisible="{Binding OrderNotificationStatus, Converter={xct:EqualConverter}, ConverterParameter={x:Static enums:ENotificationType.OrderSaved}}"
                                xct:TouchEffect.Command="{Binding GoToOrderTabsCommand}">

                                <ffimageloading:CachedImage
                                    Source="ic_folder_primary_24x24"
                                    HeightRequest="24"
                                    WidthRequest="24"
                                    HorizontalOptions="Start"
                                    VerticalOptions="EndAndExpand"
                                    Margin="0, 5, 0, 0" />

                                <Label
                                    Text="{xct:Translate OrderTabs}"
                                    FontFamily="Barlow-Medium"
                                    TextColor="{DynamicResource AppColor_i1}"
                                    FontSize="{DynamicResource TSize_i8}"
                                    VerticalOptions="Start"
                                    VerticalTextAlignment="Center"
                                    Margin="{OnPlatform Android='5, 5, 0, 0', iOS='5, 9, 0, 0'}"/>
                                
                            </StackLayout>

                        </StackLayout>

                    </Frame>

                    <StackLayout
                        VerticalOptions="EndAndExpand"
                        Margin="0, 0, 0, 100">

                        <ffimageloading:CachedImage
                            HorizontalOptions="Center"
                            HeightRequest="150"
                            WidthRequest="250"
                            Source="pic_payment.png" />

                        <controls:LineSpacingLabel
                            Style="{DynamicResource Regular24pxLabelStyle}"
                            HorizontalOptions="Center"
                            HorizontalTextAlignment="Center"
                            WidthRequest="250"
                            TextColor="{DynamicResource TextAndBackgroundColor_i1}"
                            FontSize="{DynamicResource TSize_i4_5}"
                            FontFamily="Barlow-Regular"
                            Text="{xct:Translate ToCreateNewOrderSelectDishCard}" />

                    </StackLayout>

                </StackLayout>
            </controls:CustomCollectionView.EmptyView>

            <controls:CustomCollectionView.GroupHeaderTemplate>
                <DataTemplate>
                    <templates:SeatHeaderItemTemplate />
                </DataTemplate>
            </controls:CustomCollectionView.GroupHeaderTemplate>

            <controls:CustomCollectionView.ItemTemplate>
                <DataTemplate>
                    <templates:DishesGroupedBySeatItemTemplate />
                </DataTemplate>
            </controls:CustomCollectionView.ItemTemplate>

        </controls:CustomCollectionView>

        <!-- SUMMARY -->
        <StackLayout 
            Grid.Row="3"
            IsVisible="{Binding CurrentOrder.Seats.Count, Converter={xct:IntToBoolConverter}}">

            <!-- SUMMARY HEADER -->
            <StackLayout
                Padding="17, 11"
                Spacing="15"
                Orientation="Horizontal">

                <StackLayout>

                    <Label
                        Style="{DynamicResource Bold32pxLabelStyle}"
                        VerticalOptions="CenterAndExpand"
                        Text="{xct:Translate Summary}" />

                    <Label
                        IsVisible="{Binding CurrentOrder.Customer, Converter={xct:IsNotNullOrEmptyConverter}}"
                        VerticalOptions="FillAndExpand"
                        TextColor="{DynamicResource AppColor_i1}"
                        Text="{Binding CurrentOrder.Customer.FullName}"/>

                </StackLayout>

                <buttons:IconButton
                    Style="{DynamicResource IconButtonStyle_i2}"
                    HorizontalOptions="EndAndExpand"
                    IconSource="ic_time_circle_40x40"
                    xct:TouchEffect.Command="{Binding OpenHoldSelectionCommand}" />

                <buttons:IconButton
                    Style="{DynamicResource IconButtonStyle_i2}"
                    IconSource="ic_discount_48x48"
                    xct:TouchEffect.Command="{Binding OpenDiscountSelectionCommand}" />

                <buttons:IconButton
                    IsVisible="{Binding IsOrderWithTax}"
                    Style="{DynamicResource IconButtonStyle_i2}"
                    IconSource="ic_tax"
                    xct:TouchEffect.Command="{Binding RemoveTaxFromOrderCommand}"/>

            </StackLayout>

            <BoxView Style="{DynamicResource SeparatorStyle_i3}" />

            <!-- SUMMARY BODY -->
            <StackLayout
                Padding="17, 12, 17, 0"
                Spacing="10">

                <StackLayout Orientation="Horizontal">

                    <Label
                        Style="{DynamicResource SemiBold24pxLabelStyle}"
                        Text="{xct:Translate Subtotal}" />

                    <Label
                        Style="{DynamicResource SemiBold24pxLabelStyle}"
                        HorizontalOptions="EndAndExpand">

                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{xct:Translate CurrencySign}" />
                                <Span Text=" " />
                                <Span Text="{Binding CurrentOrder.DiscountPrice, StringFormat={x:Static local:Constants+Formats.PRICE_FORMAT}}" />
                            </FormattedString>
                        </Label.FormattedText>

                    </Label>

                </StackLayout>

                <StackLayout Orientation="Horizontal">

                    <StackLayout.Triggers>

                        <MultiTrigger TargetType="StackLayout">
                            
                            <MultiTrigger.Conditions>
                                <BindingCondition Binding="{Binding CurrentOrder.Coupon, Converter={xct:IsNullOrEmptyConverter}}" Value="True" />
                                <BindingCondition Binding="{Binding CurrentOrder.Discount, Converter={xct:IsNullOrEmptyConverter}}" Value="True" />
                            </MultiTrigger.Conditions>

                            <Setter Property="IsVisible" Value="False" />

                        </MultiTrigger>

                    </StackLayout.Triggers>

                    <Label
                        Style="{DynamicResource SemiBold24pxLabelStyle}"
                        Text="{xct:Translate Coupon}">

                        <Label.Triggers>

                            <DataTrigger
                                TargetType="Label"
                                Binding="{Binding CurrentOrder.Discount, Converter={xct:IsNotNullOrEmptyConverter}}"
                                Value="True">

                                <Setter Property="Text" Value="{xct:Translate Discount}" />

                            </DataTrigger>

                        </Label.Triggers>

                    </Label>

                    <Label
                        Style="{DynamicResource SemiBold24pxLabelStyle}"
                        HorizontalOptions="EndAndExpand">
                        
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding CurrentOrder.Coupon.Name}" />
                                <Span Text="{Binding CurrentOrder.Discount.Name}" />
                            </FormattedString>
                        </Label.FormattedText>
                        
                    </Label>

                </StackLayout>

                <StackLayout 
                    IsVisible="{Binding IsOrderWithTax}"
                    Orientation="Horizontal">

                    <Label
                        Style="{DynamicResource SemiBold24pxLabelStyle}"
                        Text="{xct:Translate Tax}" />

                    <Label
                        Style="{DynamicResource SemiBold24pxLabelStyle}"
                        HorizontalOptions="EndAndExpand">

                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{xct:Translate CurrencySign}" />
                                <Span Text=" " />
                                <Span Text="{Binding CurrentOrder.PriceTax, StringFormat={x:Static local:Constants+Formats.PRICE_FORMAT}}" />
                            </FormattedString>
                        </Label.FormattedText>

                    </Label>

                </StackLayout>

                <BoxView Style="{DynamicResource SeparatorStyle_i2}" />

                <StackLayout Orientation="Horizontal">

                    <Label
                        Style="{DynamicResource Regular32pxLabelStyle}"
                        Text="{xct:Translate Total}" />

                    <Label
                        Style="{DynamicResource Bold32pxLabelStyle}"
                        HorizontalOptions="EndAndExpand">

                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{xct:Translate CurrencySign}" />
                                <Span Text=" " />
                                <Span Text="{Binding CurrentOrder.TotalPrice, StringFormat={x:Static local:Constants+Formats.PRICE_FORMAT}}" />
                            </FormattedString>
                        </Label.FormattedText>

                    </Label>

                </StackLayout>

            </StackLayout>

        </StackLayout>

        <!-- BUTTONS -->
        <Grid
            Grid.Row="4"
            VerticalOptions="End"
            Padding="18, 12"
            RowDefinitions="auto"
            ColumnSpacing="10">

            <Grid.Triggers>
                <DataTrigger TargetType="Grid" Binding="{Binding IsOrderSavingAndPaymentEnabled}" Value="False">

                    <Setter Property="Opacity" Value="{StaticResource OpacityWhenDisabled_i1}" />
                    <Setter Property="IsEnabled" Value="False" />

                </DataTrigger>
            </Grid.Triggers>

            <buttons:BorderButton
                Grid.Column="0"
                Style="{DynamicResource BorderButtonStyle_i2}"
                BorderColor="{DynamicResource IndicationColor_i5}"
                Text="{xct:Translate Order}"
                xct:TouchEffect.Command="{Binding OrderCommand}"/> 

            <buttons:BorderButton
                Grid.Column="1"
                Style="{DynamicResource BorderButtonStyle_i2}"
                BorderColor="{DynamicResource IndicationColor_i7}"
                Text="{xct:Translate Tab}"
                xct:TouchEffect.Command="{Binding TabCommand }"/> 

            <buttons:BorderButton
                Grid.Column="2"
                Style="{DynamicResource BorderButtonStyle_i2}"
                Background="{DynamicResource IndicationColor_i1}"
                BorderColor="{DynamicResource IndicationColor_i1}"
                TextColor="{DynamicResource TextAndBackgroundColor_i3}"
                Text="{xct:Translate Pay}"
                xct:TouchEffect.Command="{Binding PayCommand }"/>
             

        </Grid>

    </Grid>

</views:BaseContentPage>