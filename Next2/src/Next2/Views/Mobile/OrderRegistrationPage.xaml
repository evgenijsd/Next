<?xml version="1.0" encoding="UTF-8"?>
<views:BaseContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:prism="http://prismlibrary.com"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
    xmlns:ffimageloading="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
    xmlns:local="clr-namespace:Next2"
    xmlns:controls="clr-namespace:Next2.Controls"
    xmlns:buttons="clr-namespace:Next2.Controls.Buttons"
    xmlns:effects="clr-namespace:Next2.Effects"
    xmlns:models="clr-namespace:Next2.Models"
    xmlns:views="clr-namespace:Next2.Views"
    xmlns:viewmodels="clr-namespace:Next2.ViewModels"
    xmlns:pancakeview="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
    x:DataType="viewmodels:OrderRegistrationViewModel"
    x:Class="Next2.Views.Mobile.OrderRegistrationPage">


    <Grid
        RowDefinitions="auto, auto, auto, auto, 65"
        BackgroundColor="{DynamicResource TextAndBackgroundColor_i3}">

        <Grid.Resources>
            <Style TargetType="ffimageloading:CachedImage">
                <Setter Property="VerticalOptions" Value="Center" />
            </Style>

            <Style x:Key="DropDownDataTemplateStyle" TargetType="StackLayout">

                <Setter Property="BackgroundColor" Value="{DynamicResource TextAndBackgroundColor_i3}" />
                <Setter Property="VisualStateManager.VisualStateGroups">

                    <VisualStateGroupList>
                        <VisualStateGroup Name="CommonStates">
                            <VisualState Name="Normal" />
                            <VisualState Name="Selected">

                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{DynamicResource AppColor_i4}" />
                                </VisualState.Setters>

                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>

                </Setter>

            </Style>

            <!-- Bold (700) 32px -->
            <Style x:Key="Bold32pxLabelStyle" TargetType="Label">
                <Setter Property="FontFamily" Value="Barlow-Bold" />
                <Setter Property="FontSize" Value="{DynamicResource TSize_i6}" />
            </Style>

            <!-- SemiBold (600) 24px -->
            <Style x:Key="SemiBold32pxLabelStyle" TargetType="Label">
                <Setter Property="FontFamily" Value="Barlow-SemiBold" />
                <Setter Property="FontSize" Value="{DynamicResource TSize_i6}" />
            </Style>

            <!-- SemiBold (600) 24px -->
            <Style x:Key="SemiBold24pxLabelStyle" TargetType="Label">
                <Setter Property="FontFamily" Value="Barlow-SemiBold" />
                <Setter Property="FontSize" Value="{DynamicResource TSize_i8}" />
            </Style>

            <!-- Medium (500) 24px -->
            <Style x:Key="Medium24pxLabelStyle" TargetType="Label">
                <Setter Property="FontFamily" Value="Barlow-Medium" />
                <Setter Property="FontSize" Value="{DynamicResource TSize_i8}" />
            </Style>

            <!-- Regular (400) 32px -->
            <Style x:Key="Regular32pxLabelStyle" TargetType="Label">
                <Setter Property="FontFamily" Value="Barlow-Regular" />
                <Setter Property="FontSize" Value="{DynamicResource TSize_i6}" />
            </Style>

            <Style x:Key="IconBorderButtonStyle_i2" TargetType="buttons:IconBorderButton" BasedOn="{StaticResource IconBorderButtonStyle_i1}">
                <Setter Property="Padding" Value="10" />
                <Setter Property="Border">
                    <Setter.Value>
                        <pancakeview:Border Color="{StaticResource AppColor_i1}" Thickness="2" />
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DropDownListStyle_i2" TargetType="controls:DropDownList" BasedOn="{StaticResource DropDownListStyle_i1}">
                <Setter Property="CornerRadius" Value="7" />
                <Setter Property="ListRowHeight" Value="46.25" />
            </Style>
        </Grid.Resources>

        <!-- HEADER, 1 ROW -->
        <StackLayout
            Grid.Row="0"
            Padding="17, 19, 17, 24"
            HorizontalOptions="Start"
            Orientation="Horizontal"
            Spacing="17">

            <ffimageloading:CachedImage
                Margin="0, 3, 0, 0"
                HeightRequest="24"
                WidthRequest="24"
                Source="ic_arrow_left_tail_24x24.png"
                xct:TouchEffect.Command="{prism:GoBack}" />

            <Label
                Style="{DynamicResource Bold32pxLabelStyle}"
                Margin="0, 2, 0, 0">

                <Label.FormattedText>
                    <FormattedString>
                        <Span Text="{xct:Translate Order}" />
                        <Span Text=" " />
                        <Span Text="{xct:Translate NumberSign}" />
                        <Span Text="{Binding NewOrderId}" />
                    </FormattedString>
                </Label.FormattedText>

                <Label.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding PayCommand}" />
                </Label.GestureRecognizers>

            </Label>

        </StackLayout>

        <controls:DropDownList
            Grid.Row="0"
            Style="{DynamicResource DropDownListStyle_i2}"
            HorizontalOptions="End"
            VerticalOptions="Start"
            Margin="17, 19"
            WidthRequest="96"
            ListRowHeight="46.25"
            HeaderText="{Binding SelectedOrderType.OrderTypeValue}"
            SelectedItem="{Binding SelectedOrderType}"
            ItemsSource="{Binding OrderTypes}">

            <controls:DropDownList.DataTemplate>
                <DataTemplate>
                    <StackLayout Style="{DynamicResource DropDownDataTemplateStyle}">

                        <StackLayout
                            HeightRequest="30"
                            Padding="14, 8"
                            Orientation="Horizontal">

                            <Label
                                x:DataType="models:OrderTypeBindableModel"
                                HorizontalOptions="FillAndExpand"
                                FontSize="{DynamicResource TSize_i7}"
                                Text="{Binding OrderTypeValue}" />

                        </StackLayout>

                        <BoxView Style="{DynamicResource SeparatorStyle_i3}" />

                    </StackLayout>
                </DataTemplate>
            </controls:DropDownList.DataTemplate>

        </controls:DropDownList>

        <!-- HEADER, 2 ROW -->
        <StackLayout
            Grid.Row="1"
            VerticalOptions="FillAndExpand"
            HorizontalOptions="End"
            Padding="17, 13, 17, 18"
            Orientation="Horizontal"
            Spacing="13">

            <Label Style="{DynamicResource SemiBold32pxLabelStyle}" HorizontalOptions="EndAndExpand" Text="{xct:Translate Seats}">

                <Label.Triggers>
                    <DataTrigger TargetType="Label" Binding="{Binding Sets.Count}" Value="0">

                        <Setter Property="Opacity" Value="{DynamicResource OpacityWhenDisabled_i1}" />

                    </DataTrigger>
                </Label.Triggers>

            </Label>

            <controls:CustomStepper MaxValue="{Binding SelectedTable.NumberOfAvailableSeats}" Value="{Binding NumberOfSeats}">

                <controls:CustomStepper.Triggers>
                    <DataTrigger TargetType="controls:CustomStepper" Binding="{Binding Sets.Count}" Value="0">

                        <Setter Property="Opacity" Value="{DynamicResource OpacityWhenDisabled_i1}" />
                        <Setter Property="IsEnabled" Value="False" />

                    </DataTrigger>
                </controls:CustomStepper.Triggers>

            </controls:CustomStepper>

        </StackLayout>

        <controls:DropDownList
            Grid.Row="1"
            Style="{DynamicResource DropDownListStyle_i2}"
            HorizontalOptions="Start"
            VerticalOptions="Start"
            Margin="18, 9"
            WidthRequest="145"
            ListRowHeight="46.5"
            HeaderText="{Binding SelectedTable.Id, StringFormat='Table {0}'}"
            SelectedItem="{Binding SelectedTable}"
            ItemsSource="{Binding Tables}">

            <controls:DropDownList.DataTemplate>
                <DataTemplate>
                    <StackLayout Style="{DynamicResource DropDownDataTemplateStyle}">

                        <StackLayout
                            HeightRequest="30"
                            Padding="8"
                            Orientation="Horizontal"
                            x:DataType="models:TableBindableModel">

                            <Label
                                HorizontalOptions="FillAndExpand"
                                FontSize="16"
                                Text="{Binding Id, StringFormat='Table {0}'}" />

                        </StackLayout>

                        <BoxView Style="{DynamicResource SeparatorStyle_i3}" />

                    </StackLayout>
                </DataTemplate>
            </controls:DropDownList.DataTemplate>

        </controls:DropDownList>

        <!-- PSEUDO-MEALS LIST (REPLACE) -->
        <CollectionView
            Grid.Row="2"
            ItemsSource="{Binding Sets}"
            SelectedItem="{Binding SelectedTable}"
            BackgroundColor="{DynamicResource TextAndBackgroundColor_i8}">

            <CollectionView.Effects>
                <effects:NoOverScrollEffect />
            </CollectionView.Effects>
            
            <CollectionView.ItemTemplate>
                <DataTemplate>
                    <StackLayout Padding="30">
                            
                        <Label Text="{Binding .}"/>
                        <BoxView Style="{StaticResource SeparatorStyle_i3}"/>
                            
                    </StackLayout>
                </DataTemplate>
            </CollectionView.ItemTemplate>

        </CollectionView>

        <!-- SUMMARY -->
        <StackLayout Grid.Row="3">

            <StackLayout.Triggers>
                <DataTrigger TargetType="StackLayout" Binding="{Binding Sets.Count}" Value="0">

                    <Setter Property="IsVisible" Value="false" />

                </DataTrigger>
            </StackLayout.Triggers>

            <!-- SUMMARY HEADER -->
            <StackLayout
                Padding="17, 11"
                Spacing="13"
                Orientation="Horizontal">

                <Label
                    Style="{DynamicResource Bold32pxLabelStyle}"
                    Text="{xct:Translate Summary}" />

                <buttons:IconBorderButton
                    Style="{DynamicResource IconBorderButtonStyle_i2}"
                    HorizontalOptions="EndAndExpand"
                    IconSource="ic_time_circle_40x40"
                    Command="{Binding OpenHoldSelectionCommand}" />

                <buttons:IconBorderButton
                    Style="{DynamicResource IconBorderButtonStyle_i2}"
                    IconSource="ic_discount_48x48"
                    Command="{Binding OpenDiscountSelectionCommand}" />

                <buttons:IconBorderButton
                    Style="{DynamicResource IconBorderButtonStyle_i2}"
                    IconSource="ic_tax"
                    Command="{Binding RemoveTaxFromOrderCommand}">

                    <buttons:IconBorderButton.Triggers>
                        <DataTrigger TargetType="buttons:IconBorderButton" Binding="{Binding IsOrderWithTax}" Value="false">

                            <Setter Property="IsVisible" Value="false" />

                        </DataTrigger>
                    </buttons:IconBorderButton.Triggers>

                </buttons:IconBorderButton>

            </StackLayout>

            <BoxView Style="{DynamicResource SeparatorStyle_i3}" />

            <!-- SUMMARY BODY -->
            <StackLayout
                Padding="17, 12, 17, 0"
                Spacing="10">

                <StackLayout Orientation="Horizontal">

                    <Label
                        Style="{DynamicResource SemiBold24pxLabelStyle}"
                        Text="{xct:Translate Subtotal}" />

                    <Label
                        Style="{DynamicResource SemiBold24pxLabelStyle}"
                        HorizontalOptions="EndAndExpand">

                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{xct:Translate CurrencySign}" />
                                <Span Text=" " />
                                <Span Text="{Binding SubTotal, StringFormat={x:Static local:Constants.PRICE_FORMAT}}" />
                            </FormattedString>
                        </Label.FormattedText>

                    </Label>

                </StackLayout>

                <StackLayout Orientation="Horizontal">

                    <Label
                        Style="{DynamicResource SemiBold24pxLabelStyle}"
                        Text="{xct:Translate Tax}" />

                    <Label
                        Style="{DynamicResource SemiBold24pxLabelStyle}"
                        HorizontalOptions="EndAndExpand">

                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{xct:Translate CurrencySign}" />
                                <Span Text=" " />
                                <Span Text="{Binding Tax, StringFormat={x:Static local:Constants.PRICE_FORMAT}}" />
                            </FormattedString>
                        </Label.FormattedText>

                    </Label>

                </StackLayout>

                <BoxView Style="{DynamicResource SeparatorStyle_i2}" />

                <StackLayout Orientation="Horizontal">

                    <Label
                        Style="{DynamicResource Regular32pxLabelStyle}"
                        Text="{xct:Translate Total}" />

                    <Label
                        Style="{DynamicResource Bold32pxLabelStyle}"
                        HorizontalOptions="EndAndExpand">

                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{xct:Translate CurrencySign}" />
                                <Span Text=" " />
                                <Span Text="{Binding Total, StringFormat={x:Static local:Constants.PRICE_FORMAT}}" />
                            </FormattedString>
                        </Label.FormattedText>

                    </Label>

                </StackLayout>

            </StackLayout>

        </StackLayout>

        <!-- BUTTONS -->
        <Grid
            Grid.Row="4"
            VerticalOptions="End"
            Padding="18, 12"
            RowDefinitions="auto"
            ColumnSpacing="10">

            <Grid.Triggers>
                <DataTrigger TargetType="Grid" Binding="{Binding Sets.Count}" Value="0">

                    <Setter Property="Opacity" Value="{DynamicResource OpacityWhenDisabled_i1}" />
                    <Setter Property="IsEnabled" Value="False" />

                </DataTrigger>
            </Grid.Triggers>

            <buttons:BorderButton
                Grid.Column="0"
                Style="{DynamicResource BorderButtonStyle_i2}"
                BorderColor="{DynamicResource IndicationColor_i5}"
                Text="{xct:Translate Order}"
                Command="{Binding OrderCommand}" />

            <buttons:BorderButton
                Grid.Column="1"
                Style="{DynamicResource BorderButtonStyle_i2}"
                BorderColor="{DynamicResource IndicationColor_i7}"
                Text="{xct:Translate Tab}"
                Command="{Binding TabCommand}" />

            <buttons:BorderButton
                Grid.Column="2"
                Style="{DynamicResource BorderButtonStyle_i2}"
                Background="{DynamicResource IndicationColor_i1}"
                BorderColor="{DynamicResource IndicationColor_i1}"
                TextColor="{DynamicResource TextAndBackgroundColor_i3}"
                Text="{xct:Translate Pay}"
                Command="{Binding PayCommand}" />

        </Grid>

    </Grid>

</views:BaseContentPage>