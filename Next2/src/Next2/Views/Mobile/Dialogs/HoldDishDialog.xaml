<?xml version="1.0" encoding="UTF-8"?>
<rg:PopupPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
    xmlns:viewModels="clr-namespace:Next2.ViewModels.Dialogs"
    xmlns:buttons="clr-namespace:Next2.Controls.Buttons"
    xmlns:controls="clr-namespace:Next2.Controls"
    xmlns:local="clr-namespace:Next2"
    xmlns:templates="clr-namespace:Next2.Controls.Templates"
    xmlns:rg="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
    xmlns:pancakeview="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
    xmlns:ffimageloading="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
    Padding="15, 22, 15, 5"
    x:Class="Next2.Views.Mobile.Dialogs.HoldDishDialog"
    x:DataType="viewModels:HoldDishDialogViewModel">

    <pancakeview:PancakeView
        Border="{pancakeview:BorderMarkup Thickness=3, Color={StaticResource TextAndBackgroundColor_i2}}"
        BackgroundColor="{DynamicResource TextAndBackgroundColor_i3}"
        CornerRadius="5"
        HeightRequest="650"
        HorizontalOptions="FillAndExpand"
        VerticalOptions="CenterAndExpand"
        xct:ShadowEffect.Color="Black"
        xct:ShadowEffect.Radius="16">

        <pancakeview:PancakeView.Resources>

            <Style x:Key="BorderButtonStyle_i2_1" TargetType="buttons:BorderButton" BasedOn="{StaticResource BorderButtonStyle_i2}">
                <Setter Property="Padding" Value="0, 0, 0, 2" />
                <Setter Property="HeightRequest" Value="40" />
                <Setter Property="CornerRadius" Value="8" />
                <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            </Style>

            <Style x:Key="LabelStyle_i1" TargetType="Label">
                <Setter Property="TextColor" Value="{DynamicResource TextAndBackgroundColor_i1}" />
                <Setter Property="VerticalTextAlignment" Value="Center" />
                <Setter Property="HorizontalTextAlignment" Value="Center" />
                <Setter Property="HorizontalOptions" Value="Center" />
                <Setter Property="VerticalOptions" Value="Center" />
                <Setter Property="FontSize" Value="{DynamicResource TSize_i13}" />
                <Setter Property="FontFamily" Value="Barlow-Bold" />
                <Setter Property="Margin" Value="0, 0, 0, 15" />
                <Setter Property="Opacity" Value="{DynamicResource OpacityWhenDisabled_i3}" />
                <Setter Property="Text" Value=":" />
            </Style>

            <Style x:Key="IconButtonStyle_i3" TargetType="buttons:IconButton">
                <Setter Property="VerticalOptions" Value="CenterAndExpand" />
                <Setter Property="xct:TouchEffect.Command" Value="{Binding ChangeTimeHoldCommand}" />
                <Setter Property="HeightRequest" Value="45" />
                <Setter Property="WidthRequest" Value="45" />
                <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            </Style>

            <Style x:Key="LabelStyle_i4" TargetType="Label">
                <Setter Property="MaxLines" Value="1" />
                <Setter Property="TextColor" Value="{DynamicResource TextAndBackgroundColor_i1}" />
            </Style>

            <Style x:Key="LabelStyle_i5" TargetType="Label">
                <Setter Property="HorizontalOptions" Value="CenterAndExpand" />
                <Setter Property="VerticalOptions" Value="Center" />
                <Setter Property="HorizontalTextAlignment" Value="Center" />
                <Setter Property="FontSize" Value="{DynamicResource TSize_i6}" />
                <Setter Property="FontFamily" Value="Barlow-Medium" />
            </Style>

            <DataTemplate x:Key="timeItemTemplate">
                <templates:HoldTimeItemTemplate 
                    HeightRequest="40"
                    ItemBackgroundColor="{DynamicResource TextAndBackgroundColor_i3}"
                    ItemBorderColor="{DynamicResource TextAndBackgroundColor_i2}" />
            </DataTemplate>

        </pancakeview:PancakeView.Resources>

        <pancakeview:PancakeView.Triggers>

            <DataTrigger 
                TargetType="pancakeview:PancakeView"
                Binding="{Binding IsNotRelease, Converter={xct:InvertedBoolConverter}}"
                Value="True">

                <Setter Property="HeightRequest" Value="260" />

            </DataTrigger>

            <DataTrigger
                TargetType="pancakeview:PancakeView"
                Binding="{Binding HoldDishes, Converter={xct:IsNotNullOrEmptyConverter}}"
                Value="True">

                <Setter Property="HeightRequest" Value="380" />
                
            </DataTrigger>

        </pancakeview:PancakeView.Triggers>

        <Grid>

            <StackLayout HorizontalOptions="FillAndExpand">

                <StackLayout
                    HorizontalOptions="FillAndExpand"
                    Orientation="Horizontal"
                    Padding="20, 17" >

                    <Label
                        Style="{DynamicResource LabelStyle_i5}"
                        VerticalTextAlignment="Center"
                        HorizontalOptions="Start"
                        FontSize="{DynamicResource TSize_i6}"
                        FontFamily="Barlow-SemiBold"
                        Text="{xct:Translate HoldItem}">

                        <Label.Triggers>

                            <DataTrigger TargetType="Label" Binding="{Binding SelectedDish, Converter={xct:IsNullOrEmptyConverter}}" Value="True">
                                <Setter Property="Text" Value="{xct:Translate WhatHold}" />
                            </DataTrigger>

                            <DataTrigger TargetType="Label" Binding="{Binding IsNotRelease}" Value="False">
                                <Setter Property="Text" Value="{xct:Translate ReleaseItem}" />
                            </DataTrigger>

                            <DataTrigger TargetType="Label" Binding="{Binding HoldDishes, Converter={xct:IsNotNullOrEmptyConverter}}" Value="True">
                                <Setter Property="Text" Value="{xct:Translate ReleaseItems}" />
                            </DataTrigger>

                        </Label.Triggers>

                    </Label>

                    <Label
                        Style="{DynamicResource LabelStyle_i5}"
                        VerticalTextAlignment="Center"
                        HorizontalOptions="EndAndExpand"
                        FontSize="{DynamicResource TSize_i6}"
                        FontFamily="Barlow-Regular"
                        Text="{Binding CurrentTime, StringFormat={x:Static local:Constants+Formats.TIME_FORMAT}}" />

                </StackLayout>
                

                <StackLayout
                    VerticalOptions="FillAndExpand"
                    HorizontalOptions="FillAndExpand"
                    BackgroundColor="{DynamicResource TextAndBackgroundColor_i4}">

                <StackLayout
                    Orientation="Horizontal"
                    VerticalOptions="FillAndExpand"
                    IsVisible="{Binding HoldDishes, Converter={xct:IsNotNullOrEmptyConverter}}">

                    <Label Style="{DynamicResource LabelStyle_i5}">                        
                        <Label.FormattedText>
                            <FormattedString>

                                <Span Text="{xct:Translate NumberOfItems}"/>
                                <Span Text="&#10;" FontSize="{DynamicResource TSize_i0_10}"/>
                                <Span
                                    Text="{Binding HoldDishes.Count}"
                                    FontSize="{DynamicResource TSize_i0_7}"
                                    FontFamily="Barlow-Bold"
                                    TextColor="{DynamicResource IndicationColor_i5}"/>

                            </FormattedString>
                        </Label.FormattedText>                        
                    </Label>

                    <BoxView
                        BackgroundColor="{DynamicResource TextAndBackgroundColor_i2}"
                        Margin="0, 50"
                        WidthRequest="2"
                        HorizontalOptions="Center"
                        VerticalOptions="FillAndExpand" />

                    <Label Style="{DynamicResource LabelStyle_i5}">                        
                        <Label.FormattedText>
                            <FormattedString>

                                <Span Text="{xct:Translate TableNumber}"/>
                                <Span Text="&#10;" FontSize="{DynamicResource TSize_i0_10}"/>
                                <Span
                                    Text="{Binding HoldDishes[0].TableNumber}"
                                    FontSize="{DynamicResource TSize_i0_7}" 
                                    FontFamily="Barlow-Bold"
                                    TextColor="{DynamicResource IndicationColor_i7}"/>

                            </FormattedString>
                        </Label.FormattedText>                        
                    </Label>
                    
                </StackLayout>
                        
                    <pancakeview:PancakeView
                        CornerRadius="8"
                        Margin="20, 15, 20, 20"
                        Border="{pancakeview:BorderMarkup Thickness=1, Color={StaticResource TextAndBackgroundColor_i2}}"
                        IsVisible="{Binding HoldDishes, Converter={xct:IsNullOrEmptyConverter}}">

                        <pancakeview:PancakeView.Triggers>

                            <DataTrigger
                                TargetType="pancakeview:PancakeView"
                                Binding="{Binding SelectedDish, Converter={xct:IsNullOrEmptyConverter}}"
                                Value="True">

                                <Setter Property="Border" Value="{pancakeview:BorderMarkup Thickness=0}" />

                            </DataTrigger>

                        </pancakeview:PancakeView.Triggers>

                        <StackLayout
                            Orientation="Horizontal"
                            Spacing="5">

                            <pancakeview:PancakeView
                                HeightRequest="44"
                                MinimumWidthRequest="44"
                                WidthRequest="44"
                                CornerRadius="8"
                                HorizontalOptions="Start"
                                VerticalOptions="Center"
                                Margin="15, 10, 10, 10">

                                <ffimageloading:CachedImage
                                    Aspect="AspectFill"
                                    Source="{Binding SelectedDish.ImageSource}" />

                            </pancakeview:PancakeView>

                            <StackLayout
                                VerticalOptions="CenterAndExpand"
                                Spacing="6"
                                Margin="0, 14">

                                <Label
                                    Style="{DynamicResource LabelStyle_i4}"
                                    VerticalOptions="Center"
                                    Padding="0, 0, 10, 0"
                                    Text="{Binding SelectedDish.Name}"
                                    FontSize="{DynamicResource TSize_i8}"
                                    FontFamily="Barlow-Medium"
                                    LineBreakMode="TailTruncation" />

                                <Label
                                    Style="{DynamicResource LabelStyle_i4}"
                                    VerticalOptions="Center"
                                    Padding="0, 0, 10, 0"
                                    Text="{Binding ProductNames}"
                                    FontSize="{DynamicResource TSize_i9}"
                                    FontFamily="Barlow-Regular"
                                    LineBreakMode="TailTruncation" />

                            </StackLayout>

                        </StackLayout>

                    </pancakeview:PancakeView>

                    <BoxView
                        HeightRequest="1"
                        Margin="20, 0"
                        BackgroundColor="{DynamicResource TextAndBackgroundColor_i2}"
                        IsVisible="{Binding IsNotRelease}" />

                    <controls:CustomCollectionView
                        Margin="10, 0, 16, 0"
                        ItemsSource="{Binding AvailableHoldingTimeInMinutes}"
                        HorizontalOptions="CenterAndExpand"
                        ItemSizingStrategy="MeasureFirstItem"
                        ItemTemplate="{DynamicResource timeItemTemplate}"
                        BounceMode="DisabledForAndroidAndiOS"
                        IsVisible="{Binding IsNotRelease}">

                        <CollectionView.ItemsLayout>

                            <GridItemsLayout
                                Orientation="Vertical"
                                Span="3" />

                        </CollectionView.ItemsLayout>

                        <CollectionView.Header>
                            <StackLayout>

                                <Label
                                    VerticalTextAlignment="Start"
                                    Margin="20, 23"
                                    FontFamily="Barlow-Regular"
                                    FontSize="{DynamicResource TSize_i6}"
                                    TextColor="{DynamicResource TextAndBackgroundColor_i1}"
                                    Text="{xct:Translate SelectTime}" />

                            </StackLayout>
                        </CollectionView.Header>

                        <CollectionView.Footer>
                            <StackLayout>

                                <StackLayout
                                    HeightRequest="230"
                                    MinimumHeightRequest="230"
                                    Orientation="Horizontal"
                                    Margin="0, 30, 0, 20"
                                    HorizontalOptions="CenterAndExpand">

                                    <StackLayout.Triggers>

                                        <DataTrigger
                                            TargetType="StackLayout"
                                            Binding="{Binding SelectedHoldingTimeInMinutes, Converter={xct:IsNotNullOrEmptyConverter}}"
                                            Value="True">

                                            <Setter Property="Opacity" Value="{DynamicResource OpacityWhenDisabled_i1}" />
                                            <Setter Property="IsEnabled" Value="False" />

                                        </DataTrigger>

                                    </StackLayout.Triggers>

                                    <controls:StepperNumber
                                        ImageSize="50"
                                        WidthRequest="80"
                                        FontSize="{DynamicResource TSize_i13}"
                                        MinNumber="0"
                                        MaxNumber="23"
                                        NumberChangedAction="{Binding UpdateHoldTime}"
                                        Value="{Binding Hour}" />

                                    <Label Style="{DynamicResource LabelStyle_i1}" />

                                    <controls:StepperNumber
                                        ImageSize="50"
                                        WidthRequest="85"
                                        FontSize="{DynamicResource TSize_i13}"
                                        MinNumber="0"
                                        MaxNumber="59"
                                        NumberChangedAction="{Binding UpdateHoldTime}"
                                        Value="{Binding Minute}" />

                                </StackLayout>

                            </StackLayout>
                        </CollectionView.Footer>

                    </controls:CustomCollectionView>

                </StackLayout>

                <StackLayout>

                    <BoxView
                        HeightRequest="1"
                        HorizontalOptions="FillAndExpand"
                        BackgroundColor="{DynamicResource TextAndBackgroundColor_i2}" />

                    <StackLayout
                        Spacing="15"
                        Orientation="Horizontal"
                        HeightRequest="40"
                        MinimumHeightRequest="40"
                        HorizontalOptions="FillAndExpand"
                        Padding="20, 15">


                        <buttons:BorderButton
                            Style="{DynamicResource BorderButtonStyle_i2_1}"
                            BackgroundColor="Transparent"
                            BorderColor="{DynamicResource IndicationColor_i3}"
                            TextColor="{DynamicResource TextAndBackgroundColor_i1}"
                            Text="{xct:Translate Cancel}"
                            Command="{Binding CloseCommand}" />

                        <buttons:BorderButton
                            Style="{DynamicResource BorderButtonStyle_i2_1}"
                            HorizontalOptions="FillAndExpand"
                            BackgroundColor="{DynamicResource IndicationColor_i1}"
                            TextColor="{DynamicResource TextAndBackgroundColor_i3}"
                            Text="{xct:Translate Hold}"
                            Command="{Binding HoldCommand}" >

                            <buttons:BorderButton.Triggers>
                                <DataTrigger TargetType="buttons:BorderButton" Binding="{Binding IsNotRelease}" Value="False">
                                    <Setter Property="Text" Value="{xct:Translate Release}" />
                                </DataTrigger>
                            </buttons:BorderButton.Triggers>

                        </buttons:BorderButton>

                    </StackLayout>
                    
                </StackLayout>

            </StackLayout>

            <StackLayout
                HorizontalOptions="FillAndExpand"
                VerticalOptions="Start"
                Margin="20, 73, 20, 0"
                IsVisible="{Binding SeatNumbers, Converter={xct:IsNotNullOrEmptyConverter}}">

                <Label
                    FontFamily="Barlow-Medium"
                    Margin="0, 0, 0, 10"
                    FontSize="{DynamicResource TSize_i8}"
                    TextColor="{DynamicResource TextAndBackgroundColor_i1}"
                    Text="{xct:Translate HoldItemsFrom}"/>

                <controls:DropDownList
                    Style="{DynamicResource DropDownListStyle_i1}"
                    HeaderTextSize="{DynamicResource TSize_i9}"
                    ScrollBarVisibility="Never"
                    HorizontalOptions="FillAndExpand"
                    ItemsSource="{Binding SeatNumbers}"
                    SelectedItem="{Binding SelectedSeatNumber}"
                    SelectionChangedCommand="{Binding SelectSeatCommand}">

                    <controls:DropDownList.HeaderFormattedText>
                        <FormattedString>
                            <Span Text="{xct:Translate Seat}" />
                            <Span Text=" " />
                            <Span Text="{Binding CurrentSeatNumber}" />
                        </FormattedString>
                    </controls:DropDownList.HeaderFormattedText>

                    <controls:DropDownList.Triggers>

                        <DataTrigger
                            TargetType="controls:DropDownList"
                            Binding="{Binding SelectedSeatNumber}"
                            Value="{x:Static local:Constants+Limits.ALL_SEATS}">

                            <Setter Property="HeaderFormattedText" Value="{xct:Translate WholeOrder}" />

                        </DataTrigger>

                    </controls:DropDownList.Triggers>

                    <controls:DropDownList.DataTemplate>
                        <DataTemplate x:DataType="{x:Type x:Int32}">

                            <templates:TextItemTemplate
                                Style="{DynamicResource StackLayoutTemplateStyle_i1}"
                                FontSize="{DynamicResource TSize_i8}"
                                xct:TouchEffect.Command="{Binding SelectItemCommand, Source={RelativeSource AncestorType={x:Type controls:DropDownList}}}">

                                <templates:TextItemTemplate.FormattedText>
                                    <FormattedString>
                                        <Span Text="{xct:Translate Seat}" />
                                        <Span Text=" " />
                                        <Span Text="{Binding .}" />
                                    </FormattedString>
                                </templates:TextItemTemplate.FormattedText>

                                <templates:TextItemTemplate.Triggers>

                                    <DataTrigger
                                        TargetType="templates:TextItemTemplate"
                                        Binding="{Binding .}"
                                        Value="{x:Static local:Constants+Limits.ALL_SEATS}">

                                        <Setter Property="FormattedText" Value="{xct:Translate WholeOrder}" />

                                    </DataTrigger>

                                </templates:TextItemTemplate.Triggers>

                            </templates:TextItemTemplate>

                        </DataTemplate>

                    </controls:DropDownList.DataTemplate>

                </controls:DropDownList>
            </StackLayout>
            
        </Grid>

    </pancakeview:PancakeView>

</rg:PopupPage>