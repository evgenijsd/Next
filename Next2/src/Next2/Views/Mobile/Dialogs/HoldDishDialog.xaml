<?xml version="1.0" encoding="UTF-8"?>
<rg:PopupPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
    xmlns:viewModels="clr-namespace:Next2.ViewModels.Dialogs"
    xmlns:buttons="clr-namespace:Next2.Controls.Buttons"
    xmlns:enums="clr-namespace:Next2.Enums"
    xmlns:local="clr-namespace:Next2"
    xmlns:effects="clr-namespace:Next2.Effects"
    xmlns:templates="clr-namespace:Next2.Controls.Templates"
    xmlns:rg="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
    xmlns:pancakeview="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
    xmlns:ffimageloading="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
    Padding="15, 22, 15, 5"
    x:Class="Next2.Views.Mobile.Dialogs.HoldDishDialog"
    x:DataType="viewModels:HoldDishDialogViewModel">

    <pancakeview:PancakeView
        Border="{pancakeview:BorderMarkup Thickness=3, Color={StaticResource TextAndBackgroundColor_i2}}"
        BackgroundColor="{DynamicResource TextAndBackgroundColor_i3}"
        CornerRadius="5"
        HorizontalOptions="Center"
        VerticalOptions="Center"
        xct:ShadowEffect.Color="Black"
        xct:ShadowEffect.Radius="16">

        <pancakeview:PancakeView.Resources>

            <Style x:Key="BorderButtonStyle_i2_1" TargetType="buttons:BorderButton" BasedOn="{StaticResource BorderButtonStyle_i2}">
                <Setter Property="Padding" Value="0, 0, 0, 2" />
                <Setter Property="HeightRequest" Value="40" />
                <Setter Property="CornerRadius" Value="8" />
            </Style>

            <Style x:Key="LabelStyle_i1" TargetType="Label">
                <Setter Property="TextColor" Value="{DynamicResource TextAndBackgroundColor_i1}" />
                <Setter Property="VerticalTextAlignment" Value="Center" />
                <Setter Property="FontSize" Value="{DynamicResource TSize_i13}" />
                <Setter Property="FontFamily" Value="Barlow-Bold" />
                <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            </Style>

            <Style x:Key="IconButtonStyle_i3" TargetType="buttons:IconButton">
                <Setter Property="VerticalOptions" Value="CenterAndExpand" />
                <Setter Property="xct:TouchEffect.Command" Value="{Binding ChangeTimeHoldCommand}" />
                <Setter Property="HeightRequest" Value="45" />
                <Setter Property="WidthRequest" Value="45" />
                <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            </Style>

            <Style x:Key="LabelStyle_i4" TargetType="Label">
                <Setter Property="MaxLines" Value="1" />
                <Setter Property="TextColor" Value="{DynamicResource TextAndBackgroundColor_i1}" />
            </Style>

            <DataTemplate x:Key="timeItemTemplate">
                <templates:TimeItemTemplate HeightItems="40" />
            </DataTemplate>

        </pancakeview:PancakeView.Resources>

        <StackLayout
            VerticalOptions="FillAndExpand"
            HorizontalOptions="FillAndExpand">

            <StackLayout
                HorizontalOptions="FillAndExpand"
                Orientation="Horizontal"
                Padding="20, 17">

                <Label
                    VerticalTextAlignment="Center"
                    Style="{DynamicResource LabelStyle_i4}"
                    FontSize="{DynamicResource TSize_i6}"
                    FontFamily="Barlow-SemiBold"
                    Text="{xct:Translate HoldItem}" />

                <Label
                    VerticalTextAlignment="Center"
                    Style="{DynamicResource LabelStyle_i4}"
                    HorizontalOptions="EndAndExpand"
                    FontSize="{DynamicResource TSize_i6}"
                    FontFamily="Barlow-Regular"
                    Text="{Binding CurrentTime, StringFormat={x:Static local:Constants+Formats.TIME_FORMAT}}" />

            </StackLayout>

            <StackLayout BackgroundColor="{DynamicResource TextAndBackgroundColor_i4}">

                <pancakeview:PancakeView
                    CornerRadius="8"
                    Margin="20, 15, 20, 20"
                    Border="{pancakeview:BorderMarkup Thickness=1, Color={StaticResource TextAndBackgroundColor_i2}}">

                    <StackLayout
                        Orientation="Horizontal"
                        Spacing="5">

                        <pancakeview:PancakeView
                            HeightRequest="44"
                            MinimumWidthRequest="44"
                            WidthRequest="44"
                            CornerRadius="8"
                            HorizontalOptions="Start"
                            VerticalOptions="Center"
                            Margin="15, 10, 10, 10">

                            <ffimageloading:CachedImage
                                Aspect="AspectFill"
                                Source="{Binding SelectedDish.ImageSource}" />

                        </pancakeview:PancakeView>

                        <StackLayout
                            VerticalOptions="CenterAndExpand"
                            Spacing="6"
                            Margin="0, 14">

                            <Label
                                VerticalOptions="Center"
                                Style="{DynamicResource LabelStyle_i4}"
                                Padding="0, 0, 10, 0"
                                Text="{Binding SelectedDish.Name}"
                                FontSize="{DynamicResource TSize_i8}"
                                FontFamily="Barlow-Medium"
                                LineBreakMode="TailTruncation" />

                            <Label
                                VerticalOptions="Center"
                                Style="{DynamicResource LabelStyle_i4}"
                                Padding="0, 0, 10, 0"
                                Text="{Binding ProductNames}"
                                FontSize="{DynamicResource TSize_i9}"
                                FontFamily="Barlow-Regular"
                                LineBreakMode="TailTruncation" />

                        </StackLayout>

                    </StackLayout>

                </pancakeview:PancakeView>

                <BoxView
                    HeightRequest="1"
                    Margin=" 20, 0"
                    BackgroundColor="{DynamicResource TextAndBackgroundColor_i2}" />

                <ScrollView>
                    
                    <ScrollView.Effects>
                        <effects:NoOverScrollEffect />
                    </ScrollView.Effects>

                    <StackLayout HeightRequest="360">

                        <Label
                            VerticalTextAlignment="Start"
                            Margin="20, 23"
                            FontFamily="Barlow-Regular"
                            FontSize="{DynamicResource TSize_i6}"
                            TextColor="{DynamicResource TextAndBackgroundColor_i1}"
                            Text="{xct:Translate SelectTime}" />

                        <CollectionView
                            Margin="8, 0, 18, 0"
                            ItemsSource="{Binding AvailableHoldingTimeInMinutes}"
                            HeightRequest="40"
                            HorizontalOptions="CenterAndExpand"
                            ItemSizingStrategy="MeasureFirstItem"
                            ItemTemplate="{DynamicResource timeItemTemplate}">

                            <CollectionView.ItemsLayout>

                                <GridItemsLayout
                                    Orientation="Vertical"
                                    Span="3" />

                            </CollectionView.ItemsLayout>

                        </CollectionView>

                        <Grid
                            Margin="0, 30, 0, 0"
                            ColumnDefinitions="*, 70, 30, 70, 0.9*"
                            RowDefinitions="*, *, *"
                            VerticalOptions="FillAndExpand">

                            <Grid.Triggers>
                                <DataTrigger
                                    TargetType="Grid"
                                    Binding="{Binding SelectedHoldingTimeInMinutes, Converter={xct:IsNotNullOrEmptyConverter}}"
                                    Value="True">
                                    
                                    <Setter Property="Opacity" Value="{DynamicResource OpacityWhenDisabled_i1}" />
                                    <Setter Property="IsEnabled" Value="False" />
                                    
                                </DataTrigger>
                            </Grid.Triggers>

                            <Label
                                Grid.Row="1"
                                Grid.Column="1"
                                Style="{DynamicResource LabelStyle_i1}"
                                HorizontalTextAlignment="End"
                                Padding="0, 10, 15, 0"
                                Text="{Binding Hour, StringFormat='{0:D2}'}" />

                            <Label
                                Grid.Row="1"
                                Grid.Column="2"
                                Style="{DynamicResource LabelStyle_i1}"
                                Padding="5, 5, 0, 0"
                                Text=":"
                                Opacity="{DynamicResource OpacityWhenDisabled_i3}" />

                            <Label
                                Grid.Row="1"
                                Grid.Column="3"
                                Style="{DynamicResource LabelStyle_i1}"
                                HorizontalTextAlignment="End"
                                Padding="0, 10, 10, 0"
                                Text="{Binding Minute, StringFormat='{0:D2}'}" />

                            <buttons:IconButton
                                Grid.Row="0"
                                Grid.Column="1"
                                Style="{DynamicResource IconButtonStyle_i3}"
                                HorizontalOptions="Center"
                                Padding="0, 5, 5, 0"
                                Border="{pancakeview:BorderMarkup Thickness=0}"
                                IconSource="ic_arrow_up_circle_primary_40x40"
                                xct:TouchEffect.CommandParameter="{x:Static enums:EHoldChange.HourIncrement}" />

                            <buttons:IconButton
                                Grid.Row="0"
                                Grid.Column="3"
                                Style="{DynamicResource IconButtonStyle_i3}"
                                Padding="5, 5, 10, 0"
                                Border="{pancakeview:BorderMarkup Thickness=0}"
                                IconSource="ic_arrow_up_circle_primary_40x40"
                                xct:TouchEffect.CommandParameter="{x:Static enums:EHoldChange.MinuteIncrement}" />

                            <buttons:IconButton
                                Grid.Row="2"
                                Grid.Column="1"
                                Style="{DynamicResource IconButtonStyle_i3}"
                                HorizontalOptions="Center"
                                Padding="0, 20, 5, 0"
                                Border="{pancakeview:BorderMarkup Thickness=0}"
                                IconSource="ic_arrow_down_circle_primary_40x40"
                                xct:TouchEffect.CommandParameter="{x:Static enums:EHoldChange.HourDecrement}" />

                            <buttons:IconButton
                                Grid.Row="2"
                                Grid.Column="3"
                                Style="{DynamicResource IconButtonStyle_i3}"
                                Padding="5, 20, 10, 0"
                                Border="{pancakeview:BorderMarkup Thickness=0}"
                                IconSource="ic_arrow_down_circle_primary_40x40"
                                xct:TouchEffect.CommandParameter="{x:Static enums:EHoldChange.MinuteDecrement}" />

                        </Grid>
                        
                    </StackLayout>
                    
                </ScrollView>
                
            </StackLayout>

            <StackLayout
                HeightRequest="90"
                MinimumHeightRequest="90"
                Padding="20"
                Spacing="10">

                <StackLayout
                    HorizontalOptions="FillAndExpand"
                    Orientation="Horizontal"
                    Spacing="15">

                    <buttons:BorderButton
                        Style="{DynamicResource BorderButtonStyle_i2_1}"
                        HorizontalOptions="FillAndExpand"
                        BackgroundColor="{DynamicResource IndicationColor_i3}"
                        BorderColor="{DynamicResource IndicationColor_i3}"
                        TextColor="{DynamicResource TextAndBackgroundColor_i1}"
                        Text="{xct:Translate Dismiss}"
                        Command="{Binding DismissCommand}" />

                    <buttons:BorderButton
                        Style="{DynamicResource BorderButtonStyle_i2_1}"
                        HorizontalOptions="FillAndExpand"
                        BackgroundColor="{DynamicResource IndicationColor_i1}"
                        TextColor="{DynamicResource TextAndBackgroundColor_i3}"
                        Text="{xct:Translate Hold}"
                        Command="{Binding HoldCommand}" />

                </StackLayout>

                <buttons:BorderButton
                    Style="{DynamicResource BorderButtonStyle_i2_1}"
                    BackgroundColor="Transparent"
                    BorderColor="{DynamicResource IndicationColor_i3}"
                    TextColor="{DynamicResource TextAndBackgroundColor_i1}"
                    Text="{xct:Translate Cancel}"
                    Command="{Binding CloseCommand}" />

            </StackLayout>

        </StackLayout>

    </pancakeview:PancakeView>

</rg:PopupPage>