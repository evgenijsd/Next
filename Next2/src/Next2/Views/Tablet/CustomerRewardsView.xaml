<?xml version="1.0" encoding="utf-8" ?>
<views:BaseContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:prism="http://prismlibrary.com"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
    xmlns:ffimageloading="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
    xmlns:local="clr-namespace:Next2"
    xmlns:controls="clr-namespace:Next2.Controls"
    xmlns:buttons="clr-namespace:Next2.Controls.Buttons"
    xmlns:enums="clr-namespace:Next2.Enums"
    xmlns:models="clr-namespace:Next2.Models"
    xmlns:viewmodels="clr-namespace:Next2.ViewModels"
    xmlns:views="clr-namespace:Next2.Views"
    xmlns:pc="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
    x:DataType="viewmodels:CustomerRewardsViewModel"
    x:Class="Next2.Views.Tablet.CustomerRewardsView">
    
    <StackLayout Background="{DynamicResource TextAndBackgroundColor_i5}">
    
        <StackLayout.Resources>
            <Style TargetType="Label">
                <Setter Property="TextColor" Value="{DynamicResource TextAndBackgroundColor_i1}"/>
            </Style>
                       
            <Style x:Key="BorderButtonStyle_i2_1" TargetType="buttons:BorderButton" BasedOn="{StaticResource BorderButtonStyle_i2}">
                <Setter Property="HorizontalOptions" Value="FillAndExpand"/>
                <Setter Property="HeightRequest" Value="30"/>
                <Setter Property="FontSize" Value="{DynamicResource TSize_i8}"/>
            </Style>           
        </StackLayout.Resources>
        
        <!-- CANCEL, REWARDS TAB, COMPLETE TAB -->
        <StackLayout 
            Orientation="Horizontal"
            Background="{DynamicResource TextAndBackgroundColor_i3}">
    
            <controls:CustomNavigationbar
                Padding="50, 0, 76, 0"
                HeightImage="20"
                HeightRequest="60"
                FontFamily="Barlow-SemiBold"
                BackgroundColor="{DynamicResource TextAndBackgroundColor_i4}"
                FontSize="{DynamicResource TSize_i9}"
                Title="{xct:Translate Cancel}"
                LeftButtonCommand="{prism:GoBack}"/>

            <controls:CustomButton
                FontSize="{DynamicResource TSize_i6}"
                IsSelected="True"
                Text="{xct:Translate Rewards}"/>
            
            <BoxView
                WidthRequest="1.5"
                BackgroundColor="{DynamicResource TextAndBackgroundColor_i6}" />

            <controls:CustomButton
                FontSize="{DynamicResource TSize_i6}"
                Text="{xct:Translate Complete}"/>
            
        </StackLayout>
        
        <BoxView 
            HeightRequest="3"
            BackgroundColor="{DynamicResource TextAndBackgroundColor_i6}"/>

        <Grid
            ColumnDefinitions="0.66*, 0.33*"
            VerticalOptions="FillAndExpand">
                
            <StackLayout Grid.Row="0">
                                   
                <!-- REWARDS POINTS -->
                <Label 
                    Margin="28, 16, 28, 14"
                    FontSize="{DynamicResource TSize_i4_5}"
                    FontFamily="Barlow-Bold"
                    Text="{xct:Translate RewardsPoints}"/>

                <BoxView
                    HeightRequest="1.5"
                    BackgroundColor="{DynamicResource TextAndBackgroundColor_i3}" />
                
                <!-- PAGE STATES -->
                                
                <StackLayout Margin="0, 120">

                    <!--IF HOT RELOAD NOT WORKING, TRY COMMENTED THIS CODE-->
                    <StackLayout.Triggers>
                        <DataTrigger TargetType="StackLayout" Binding="{Binding PageState}" Value="{Static enums:ECustomerRewardsPageState.CustomerHasNoRewards}">
                                        
                            <Setter TargetName="messageImage" Property="ffimageloading:CachedImage.Source" Value="pic_rewards" />
                            <Setter TargetName="messageText" Property="controls:LineSpacingLabel.Text" Value="{xct:Translate MessageAboutCashingOutAwards}" />
                                        
                        </DataTrigger>
                        <DataTrigger TargetType="StackLayout" Binding="{Binding PageState}" Value="{Static enums:ECustomerRewardsPageState.CustomerHasRewards}">
                                        
                            <Setter TargetName="messageImage" Property="ffimageloading:CachedImage.Source" Value="pic_rewards" />
                            <Setter TargetName="messageText" Property="controls:LineSpacingLabel.Text" Value="{xct:Translate SelectRewardOptionToUseYourPoints}" />
                                        
                        </DataTrigger>
                    </StackLayout.Triggers>
                                
                    <ffimageloading:CachedImage
                        Style="{DynamicResource CachedImageStyle_i1}"
                        FadeAnimationEnabled="False"
                        HeightRequest="200"
                        Source="pic_become_a_member"
                        x:Name="messageImage"/>
                            
                    <controls:LineSpacingLabel
                        Style="{DynamicResource LineSpacingLabelStyle_i1}"
                        Text="{xct:Translate StillNotMember}"
                        x:Name="messageText"/>
                                
                </StackLayout>
                
                <BoxView 
                    VerticalOptions="EndAndExpand"
                    HeightRequest="1.5"
                    BackgroundColor="{DynamicResource TextAndBackgroundColor_i3}"/>
                
                <StackLayout
                    Padding="28, 16"
                    Orientation="Horizontal"
                    Spacing="12">
                    
                    <buttons:BorderButton
                        Style="{DynamicResource BorderButtonStyle_i2_1}"
                        BackgroundColor="{DynamicResource IndicationColor_i7}"
                        Text="{xct:Translate BecomeMember}"
                        IsVisible="False"
                        xct:TouchEffect.Command="{Binding AddNewCustomerCommand}">
                        
                        <buttons:BorderButton.Triggers>
                            <DataTrigger 
                                TargetType="buttons:BorderButton" 
                                Binding="{Binding PageState}"
                                Value="{Static enums:ECustomerRewardsPageState.NoSelectedCustomer}">
                                
                                <Setter Property="IsVisible" Value="True"/>
                                
                            </DataTrigger>
                        </buttons:BorderButton.Triggers>
                        
                    </buttons:BorderButton>

                    <buttons:BorderButton
                        Style="{DynamicResource BorderButtonStyle_i2_1}"
                        BackgroundColor="{DynamicResource AppColor_i1}"
                        Text="{xct:Translate Complete}">
                        
                        <buttons:BorderButton.Triggers>
                            <DataTrigger TargetType="buttons:BorderButton" Binding="{Binding SelectedRewards, Converter={xct:IsNullOrEmptyConverter}}" Value="True">
                                
                                <Setter Property="Text" Value="{xct:Translate Apply}"/>
                                
                            </DataTrigger>
                        </buttons:BorderButton.Triggers>
                        
                    </buttons:BorderButton>

                </StackLayout>
                
            </StackLayout>
    
            <StackLayout 
                Grid.Column="1"
                Padding="18"
                Spacing="6"
                Background="{DynamicResource TextAndBackgroundColor_i4}">
                
                <Label 
                    FontFamily="Barlow-Medium"
                    FontSize="{DynamicResource TSize_i9}"
                    Text="{xct:Translate RewardsOptions}"/>
                
                <CollectionView 
                    SelectionMode="Multiple"
                    SelectionChangedCommand="{Binding SelectionChangedCommand}"
                    ItemsSource="{Binding Rewards}"
                    SelectedItems="{Binding SelectedRewards}">
                    
                    <CollectionView.ItemTemplate>
                        <DataTemplate x:DataType="models:RewardBindabledModel">
                            <Frame
                                Padding="0, 5"
                                BackgroundColor="Transparent">
                                
                                <pc:PancakeView
                                    CornerRadius="8"
                                    Border="{pc:BorderMarkup Thickness=2, Color={StaticResource TextAndBackgroundColor_i2}}"
                                    x:Name="rewardBorder">
                                    
                                    <StackLayout
                                        Padding="12"
                                        Spacing="2">

                                        <StackLayout
                                            Orientation="Horizontal">

                                            <Label
                                                FontFamily="Barlow-Medium"
                                                FontSize="{DynamicResource TSize_i9}"
                                                Text="{Binding Title}"/>

                                            <ffimageloading:CachedImage
                                                HorizontalOptions="EndAndExpand"
                                                HeightRequest="18"
                                                Source="ic_check_box_unhecked_24x24"
                                                x:Name="rewardCheckBox"/>

                                        </StackLayout>
                                        
                                        <Label
                                            FontFamily="Barlow-SemiBold"
                                            FontSize="{DynamicResource TSize_i8}"
                                            Text="{xct:Translate Free}">
                                            
                                            <Label.Triggers>
                                                <DataTrigger TargetType="Label" Binding="{Binding DiscountType}" Value="{Static enums:EDiscountType.Percentage}">
                                                    
                                                    <Setter Property="Text" Value="{Binding Amount, StringFormat={Static local:Constants.PERCENTAGE_DISCOUNT_FORMAT}}"/>
                                                    
                                                </DataTrigger>
                                                
                                                <DataTrigger TargetType="Label" Binding="{Binding DiscountType}" Value="{Static enums:EDiscountType.Currency}">
                                                    
                                                    <Setter Property="Text" Value="{Binding Amount, StringFormat={Static local:Constants.DISCOUNT_IN_CURRENCY_FORMAT}}"/>
                                                    
                                                </DataTrigger>
                                            </Label.Triggers>
                                            
                                        </Label>

                                    </StackLayout>

                                </pc:PancakeView>
                                                                
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroupList>
                                        <VisualStateGroup Name="CommonStates">
                                            <VisualState Name="Normal" />
                                            <VisualState Name="Selected">

                                                <VisualState.Setters>              
                                                    <Setter Property="BackgroundColor" Value="Transparent" />
                                                    
                                                    <Setter
                                                        TargetName="rewardBorder"
                                                        Property="pc:PancakeView.Border"
                                                        Value="{pc:BorderMarkup Thickness=2, Color={StaticResource AppColor_i1}}" />
                                                    
                                                    <Setter
                                                        TargetName="rewardCheckBox"
                                                        Property="ffimageloading:CachedImage.Source"
                                                        Value="ic_check_box_checked_primary_24x24"/>
                                                    
                                                </VisualState.Setters>
                                    
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateGroupList>
                                        
                                </VisualStateManager.VisualStateGroups>
                                
                            </Frame>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
                                
            </StackLayout>
            
        </Grid>
        
    </StackLayout>

</views:BaseContentPage>