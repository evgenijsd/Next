<?xml version="1.0" encoding="UTF-8"?>
<rg:PopupPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
    xmlns:ffimageloading="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
    xmlns:controls="clr-namespace:Next2.Controls"
    xmlns:local="clr-namespace:Next2"
    xmlns:templates="clr-namespace:Next2.Controls.Templates"
    xmlns:buttons="clr-namespace:Next2.Controls.Buttons"
    xmlns:viewModels="clr-namespace:Next2.ViewModels.Dialogs"
    xmlns:rg="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
    xmlns:pancakeview="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
    x:Class="Next2.Views.Tablet.Dialogs.HoldDishDialog"
    x:DataType="viewModels:HoldDishDialogViewModel">

    <pancakeview:PancakeView
        HorizontalOptions="Center" 
        VerticalOptions="FillAndExpand"
        Margin="0, 70, 0, 65"
        CornerRadius="10"
        WidthRequest="430"
        Border="{pancakeview:BorderMarkup Thickness=3, Color={StaticResource TextAndBackgroundColor_i2}}"
        BackgroundColor="{DynamicResource TextAndBackgroundColor_i3}"
        xct:ShadowEffect.Color="Black"
        xct:ShadowEffect.Radius="16">
        
        <pancakeview:PancakeView.Resources>
            
            <Style x:Key="BorderButtonStyle_i2_1" TargetType="buttons:BorderButton" BasedOn="{StaticResource BorderButtonStyle_i2}">
                <Setter Property="Padding" Value="0, 0, 0, 2"/>
                <Setter Property="HeightRequest" Value="40"/>
                <Setter Property="CornerRadius" Value="8"/>
                <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            </Style>
            
            <Style x:Key="LabelStyle_i1" TargetType="Label">
                <Setter Property="TextColor" Value="{DynamicResource TextAndBackgroundColor_i1}" />
                <Setter Property="VerticalTextAlignment" Value="Center" />
                <Setter Property="HorizontalTextAlignment" Value="Center" />
                <Setter Property="HorizontalOptions" Value="Center" />
                <Setter Property="VerticalOptions" Value="Center" />
                <Setter Property="FontSize" Value="{DynamicResource TSize_i0_10}" />
                <Setter Property="FontFamily" Value="Barlow-Bold" />
                <Setter Property="Margin" Value="0, 0, 0, 15" />
                <Setter Property="Opacity" Value="{DynamicResource OpacityWhenDisabled_i3}" />
                <Setter Property="Text" Value=":" />
            </Style>
            
            <Style x:Key="LabelStyle_i3" TargetType="Label">
                <Setter Property="MaxLines" Value="1" />
                <Setter Property="TextColor" Value="{DynamicResource TextAndBackgroundColor_i1}" />
            </Style>

            <DataTemplate x:Key="timeItemTemplate">
                <templates:HoldTimeItemTemplate 
                    HeightRequest="32"
                    ItemBackgroundColor="{DynamicResource TextAndBackgroundColor_i2}"
                    ItemBorderColor="{DynamicResource TextAndBackgroundColor_i2}" />
            </DataTemplate>

        </pancakeview:PancakeView.Resources>

        <Grid>
            
            <StackLayout VerticalOptions="FillAndExpand">

                <StackLayout
                    HorizontalOptions="FillAndExpand"
                    Orientation="Horizontal"
                    Padding="20, 23">

                    <Label
                        Style="{DynamicResource LabelStyle_i3}"
                        VerticalTextAlignment="Center"
                        FontSize="{DynamicResource TSize_i6}"
                        FontFamily="Barlow-SemiBold"
                        Text="{xct:Translate HoldItem}">

                        <Label.Triggers>

                            <DataTrigger
                                TargetType="Label"
                                Binding="{Binding SelectedDish, Converter={xct:IsNullOrEmptyConverter}}"
                                Value="True">

                                <Setter Property="Text" Value="{xct:Translate WhatHold}" />

                            </DataTrigger>

                        </Label.Triggers>

                    </Label>

                    <Label
                        Style="{DynamicResource LabelStyle_i3}"
                        VerticalTextAlignment="Center"
                        HorizontalOptions="EndAndExpand"
                        FontSize="{DynamicResource TSize_i6}"
                        FontFamily="Barlow-Regular"
                        Text="{Binding CurrentTime, StringFormat={x:Static local:Constants+Formats.TIME_FORMAT}}" />

                </StackLayout>

                <BoxView
                    HeightRequest="2"
                    BackgroundColor="{DynamicResource TextAndBackgroundColor_i2}" />

                <pancakeview:PancakeView
                    CornerRadius="8"
                    Margin="20, 15, 20, 20"
                    Border="{pancakeview:BorderMarkup Thickness=2, Color={StaticResource TextAndBackgroundColor_i2}}">

                    <pancakeview:PancakeView.Triggers>

                        <DataTrigger
                            TargetType="pancakeview:PancakeView"
                            Binding="{Binding SelectedDish, Converter={xct:IsNullOrEmptyConverter}}"
                            Value="True">

                            <Setter Property="Border" Value="{pancakeview:BorderMarkup Thickness=0}" />

                        </DataTrigger>

                    </pancakeview:PancakeView.Triggers>

                    <StackLayout
                        Orientation="Horizontal"
                        Spacing="5">

                        <pancakeview:PancakeView
                            HeightRequest="44"
                            MinimumWidthRequest="44"
                            WidthRequest="44"
                            CornerRadius="8"
                            HorizontalOptions="Start"
                            VerticalOptions="Center"
                            Margin="15, 10, 10, 10">

                            <ffimageloading:CachedImage
                                Aspect="AspectFill"
                                Source="{Binding SelectedDish.ImageSource}" />

                        </pancakeview:PancakeView>

                        <StackLayout
                            VerticalOptions="CenterAndExpand"
                            Spacing="6"
                            Margin="0, 14">

                            <Label
                                Style="{DynamicResource LabelStyle_i3}"
                                VerticalOptions="Center"
                                Padding="0, 0, 10, 0"
                                Text="{Binding SelectedDish.Name}"
                                FontSize="{DynamicResource TSize_i8}"
                                FontFamily="Barlow-Medium"
                                LineBreakMode="TailTruncation" />

                            <Label
                                Style="{DynamicResource LabelStyle_i3}"
                                VerticalOptions="Center"
                                Padding="0, 0, 10, 0"
                                Text="{Binding ProductNames}"
                                FontSize="{DynamicResource TSize_i9}"
                                FontFamily="Barlow-Regular"
                                LineBreakMode="TailTruncation" />

                        </StackLayout>

                    </StackLayout>

                </pancakeview:PancakeView>

                <BoxView
                    HeightRequest="2"
                    Margin="20, 0"
                    BackgroundColor="{DynamicResource TextAndBackgroundColor_i2}" />

                <Label
                    VerticalTextAlignment="Start"
                    Padding="20, 20, 20, 15"
                    FontFamily="Barlow-Medium"
                    FontSize="{DynamicResource TSize_i8}"
                    TextColor="{DynamicResource TextAndBackgroundColor_i1}"
                    Text="{xct:Translate SelectTime}" />

                <CollectionView
                    Margin="10, 0, 16, 0"
                    ItemsSource="{Binding AvailableHoldingTimeInMinutes}"
                    HeightRequest="34"
                    HorizontalOptions="CenterAndExpand"
                    ItemSizingStrategy="MeasureFirstItem"
                    ItemTemplate="{DynamicResource timeItemTemplate}">

                    <CollectionView.ItemsLayout>

                        <GridItemsLayout
                            Orientation="Vertical"
                            Span="3" />

                    </CollectionView.ItemsLayout>

                </CollectionView>

                <StackLayout
                    HeightRequest="190"
                    Orientation="Horizontal"
                    Margin="0, 30, 0, 0"
                    HorizontalOptions="CenterAndExpand">

                    <StackLayout.Triggers>

                        <DataTrigger
                            TargetType="StackLayout"
                            Binding="{Binding SelectedHoldingTimeInMinutes, Converter={xct:IsNotNullOrEmptyConverter}}"
                            Value="True">

                            <Setter Property="Opacity" Value="{DynamicResource OpacityWhenDisabled_i1}" />
                            <Setter Property="IsEnabled" Value="False" />

                        </DataTrigger>

                    </StackLayout.Triggers>

                    <controls:StepperNumber
                        ImageSize="35"
                        WidthRequest="90"
                        FontSize="{DynamicResource TSize_i0_10}"
                        MinNumber="0"
                        MaxNumber="23"
                        NumberChangedAction="{Binding UpdateHoldTime}"
                        Number="{Binding Hour}" />

                    <Label Style="{DynamicResource LabelStyle_i1}" />

                    <controls:StepperNumber
                        ImageSize="35"
                        WidthRequest="100"
                        FontSize="{DynamicResource TSize_i0_10}"
                        MinNumber="0"
                        MaxNumber="59"
                        NumberChangedAction="{Binding UpdateHoldTime}"
                        Number="{Binding Minute}" />

                </StackLayout>

                <BoxView
                    HeightRequest="2"
                    VerticalOptions="EndAndExpand"
                    BackgroundColor="{DynamicResource TextAndBackgroundColor_i2}" />

                <StackLayout
                    HeightRequest="40"
                    MinimumHeightRequest="40"
                    HorizontalOptions="FillAndExpand"
                    Orientation="Horizontal"
                    Padding="20"
                    Spacing="15">

                    <buttons:BorderButton
                        Style="{DynamicResource BorderButtonStyle_i2_1}"
                        BackgroundColor="Transparent"
                        BorderColor="{DynamicResource IndicationColor_i3}"
                        TextColor="{DynamicResource TextAndBackgroundColor_i1}"
                        Text="{xct:Translate Cancel}"
                        Command="{Binding CloseCommand}" />

                    <buttons:BorderButton
                        Style="{DynamicResource BorderButtonStyle_i2_1}"
                        BackgroundColor="{DynamicResource IndicationColor_i1}"
                        TextColor="{DynamicResource TextAndBackgroundColor_i3}"
                        Text="{xct:Translate Hold}"
                        Command="{Binding HoldCommand}" />

                </StackLayout>

            </StackLayout>

            <StackLayout
                HorizontalOptions="FillAndExpand"
                VerticalOptions="Start"
                Margin="20, 93, 20, 0"
                IsVisible="{Binding SelectedDish, Converter={xct:IsNullOrEmptyConverter}}">

                <Label
                    FontFamily="Barlow-Medium"
                    Margin="0, 0, 0, 10"
                    FontSize="{DynamicResource TSize_i8}"
                    TextColor="{DynamicResource TextAndBackgroundColor_i1}"
                    Text="{xct:Translate HoldItemsFrom}" />

                <controls:DropDownList
                    Style="{DynamicResource DropDownListStyle_i1}"
                    HeaderTextSize="{DynamicResource TSize_i9}"
                    ScrollBarVisibility="Never"
                    HorizontalOptions="FillAndExpand"
                    ItemsSource="{Binding Seats}"
                    SelectedItem="{Binding Seat}">

                    <controls:DropDownList.HeaderFormattedText>
                        <FormattedString>
                            <Span Text="{xct:Translate Seat}" />
                            <Span Text=" " />
                            <Span Text="{Binding Seat}" />
                        </FormattedString>
                    </controls:DropDownList.HeaderFormattedText>

                    <controls:DropDownList.Triggers>

                        <DataTrigger
                            TargetType="controls:DropDownList"
                            Binding="{Binding Seat}"
                            Value="{x:Static local:Constants+Limits.ALL_SEATS}">

                            <Setter Property="HeaderFormattedText" Value="{xct:Translate WholeOrder}" />

                        </DataTrigger>

                    </controls:DropDownList.Triggers>

                    <controls:DropDownList.DataTemplate>
                        <DataTemplate x:DataType="{x:Type x:Int32}">

                            <templates:TextItemTemplate
                                Style="{DynamicResource StackLayoutTemplateStyle_i1}"
                                FontSize="{DynamicResource TSize_i8}"
                                xct:TouchEffect.Command="{Binding SelectItemCommand, Source={RelativeSource AncestorType={x:Type controls:DropDownList}}}">

                                <templates:TextItemTemplate.FormattedText>
                                    <FormattedString>
                                        <Span Text="{xct:Translate Seat}" />
                                        <Span Text=" " />
                                        <Span Text="{Binding .}" />
                                    </FormattedString>
                                </templates:TextItemTemplate.FormattedText>

                                <templates:TextItemTemplate.Triggers>

                                    <DataTrigger
                                        TargetType="templates:TextItemTemplate"
                                        Binding="{Binding .}"
                                        Value="{x:Static local:Constants+Limits.ALL_SEATS}">

                                        <Setter Property="FormattedText" Value="{xct:Translate WholeOrder}" />

                                    </DataTrigger>

                                </templates:TextItemTemplate.Triggers>

                            </templates:TextItemTemplate>

                        </DataTemplate>

                    </controls:DropDownList.DataTemplate>

                </controls:DropDownList>
            </StackLayout>
            
        </Grid>

    </pancakeview:PancakeView>

</rg:PopupPage>